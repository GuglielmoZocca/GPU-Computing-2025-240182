"ID","Process ID","Process Name","Host Name","thread Domain:Push/Pop_Range:PL_Type:PL_Value:CLR_Type:Color:Msg_Type:Msg","Id:Domain:Start/Stop_Range:PL_Type:PL_Value:CLR_Type:Color:Msg_Type:Msg","Kernel Name","Context","Stream","Block Size","Grid Size","Device","CC","Section Name","Metric Name","Metric Unit","Metric Value","Rule Name","Rule Type","Rule Description","Estimated Speedup Type","Estimated Speedup"
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.92",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","195,373",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","67.57",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","49.38",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","210.08",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","72.79",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","54.52",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","181,347.89",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","65.71",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","INF","Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. Check both the Compute Workload Analysis and Memory Workload Analysis sections.","",""
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 2% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","3.87",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","40,000",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.59",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","1.48",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","40.54",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.62",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","40.54",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","84.5"
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","460.65",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","67.57",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","65.71",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","42.65",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","31.34",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","65.71",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 23.5 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","17.93"
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global stores to L1TEX might not be optimal. On average, only 4.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global stores.","global","59.12"
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","41.37",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.41",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","58.63",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","13.73",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.70",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 2.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 13.73 active warps per scheduler, but only an average of 0.70 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","32.43"
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.18",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.73",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","23.62",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","20.35",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 19.7 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 59.5% of the total average of 33.2 cycles between issuing two instructions.","global","32.43"
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 23.6 threads being active per cycle. This is further reduced to 20.3 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible.","global","23.93"
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","72,309.09",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","16,197,236",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","73,514.24",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","16,467,190",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 1911904 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","7.75"
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Block Size","","512",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Grid Size","","200",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","22",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","Kbyte/block","5.12",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Threads","thread","102,400",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","0.89",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","5",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","10",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","4",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","84.08",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","53.81",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (84.1%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","15.92"
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","126,006.67",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","6,124,032",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","181,347.89",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","10,940,062",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","182,208.79",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","9,075,552",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","181,347.89",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","10,940,062",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","177,718.29",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","43,760,248",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more SMs have a much higher number of active cycles than the average number of active cycles. Additionally, other SMs have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 6.11% above the average, while the minimum instance value is 7.38% below the average.","global","5.671"
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more SMSPs have a much higher number of active cycles than the average number of active cycles. Additionally, other SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 7.15% above the average, while the minimum instance value is 9.01% below the average.","global","6.504"
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L1 Slices have a much higher number of active cycles than the average number of active cycles. Additionally, other L1 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 6.11% above the average, while the minimum instance value is 7.38% below the average.","global","5.671"
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.16",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,657,565",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","45.54",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","3,214.96",
"0","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","16","(512, 1, 1)","(200, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 343584 excessive sectors (7% of the total 5126531 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","6.459"
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","928.37",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","32,531",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","0.87",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","0.73",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","35.04",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","29.77",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","1.33",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","546.14",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","0.28",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel grid is too small to fill the available resources on this device, resulting in only 0.0 full waves across all SMs. Look at Launch Statistics for more details.","",""
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Kbyte","524.29",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.54",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.01",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","13.62",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.54",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","13.62",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","95.74"
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","6.77",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","0.87",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","0.79",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","41.86",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","55.87",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","0.28",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 9.6 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 100.0% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.9292"
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global stores to L1TEX might not be optimal. On average, only 4.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global stores.","global","0.4374"
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","13.35",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.13",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","86.65",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","3.92",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.22",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 7.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 3.92 active warps per scheduler, but only an average of 0.22 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp State Statistics and Source Counters sections.","local","86.65"
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","29.33",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","29.54",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.88",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","28.22",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 11.3 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 38.5% of the total average of 29.3 cycles between issuing two instructions.","global","38.54"
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","73.88",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","16,548",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","74.41",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","16,668",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 1220 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","1.893"
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Block Size","","512",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","Kbyte/block","4.11",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Threads","thread","512",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","0.00",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","LaunchStats","","","","LaunchConfiguration","OPT","The grid for this launch is configured to execute only 1 blocks, which is less than the GPU's 56 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations.","global","98.21"
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","8",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","12",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","4",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","24.99",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","15.99",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (25.0%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","75.01"
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","309",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","1,019,904",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","546.14",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","1,821,694",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","10,106.19",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","1,511,040",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","546.14",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","1,821,694",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","557.41",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","7,286,776",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much higher number of active cycles than the average number of active cycles. Maximum instance value is 20.88% above the average, while the minimum instance value is 18.88% below the average.","global","6.705"
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.15",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,539",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","97.16",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","0.16",
"1","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","16","(512, 1, 1)","(1, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 5576 excessive sectors (78% of the total 7172 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","24.96"
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.19",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","909.41",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,882",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","0.51",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","0.14",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","3.17",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","20.53",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","0.51",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","19.48",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","0.00",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel grid is too small to fill the available resources on this device, resulting in only 0.0 full waves across all SMs. Look at Launch Statistics for more details.","",""
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Kbyte","524.29",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.00",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.00",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","0.18",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.01",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","0.18",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","99.86"
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","1.25",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","0.51",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","0.38",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","0",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","100.72",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","0",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","0.77",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.01",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","99.23",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","1",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.01",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 129.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 1.00 active warps per scheduler, but only an average of 0.01 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp State Statistics and Source Counters sections.","local","99.23"
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","129.38",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","258.75",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","1",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","1",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 116.6 cycles being stalled waiting for an immediate constant cache (IMC) miss. A read from constant memory costs one memory read from device memory only on a cache miss; otherwise, it just costs one read from the constant cache. Immediate constants are encoded into the SASS instruction as 'c[bank][offset]'. Accesses to different addresses by threads within a warp are serialized, thus the cost scales linearly with the number of unique addresses read by all threads within a warp. As such, the constant cache is best when threads in the same warp access only a few distinct locations. If all threads of a warp access the same location, then constant memory can be as fast as a register access. This stall type represents about 90.1% of the total average of 129.4 cycles between issuing two instructions.","global","90.14"
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 1.0 threads being active per cycle.","global","0.001201"
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","0.02",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","4",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","0.04",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","8",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Block Size","","1",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","26",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","32.77",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","0.00",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","LaunchStats","","","","LaunchConfiguration","OPT","Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 1 threads per block. Consequently, some threads in a warp are masked off and those hardware resources are unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256 threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to kernels that frequently call __syncthreads(). See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations.","global","96.88"
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","LaunchStats","","","","LaunchConfiguration","OPT","The grid for this launch is configured to execute only 1 blocks, which is less than the GPU's 56 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations.","global","98.21"
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","64",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","32",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","64",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","1.51",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","0.97",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (50.0%) and measured achieved occupancy (1.5%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","96.98"
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","","","","TheoreticalOccupancy","OPT","The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared memory.","global","50"
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","5.17",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","90,112",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","19.48",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","161,336",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","130.98",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","133,776",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","19.48",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","161,336",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","4.62",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","645,344",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.25",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","0",
"2","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 0:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","0",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.90",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","197,151",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","66.96",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","48.94",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","212",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","72.81",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","54.00",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","181,302.38",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","65.12",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","INF","Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. Check both the Compute Workload Analysis and Memory Workload Analysis sections.","",""
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 2% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","3.87",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","40,000",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.60",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","1.47",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","40.55",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.62",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","40.55",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","84.5"
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","456.48",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","66.96",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","65.12",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","42.65",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","31.34",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","65.12",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 23.5 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","17.77"
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global stores to L1TEX might not be optimal. On average, only 4.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global stores.","global","58.59"
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","41.37",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.41",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","58.63",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","13.72",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.70",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 2.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 13.72 active warps per scheduler, but only an average of 0.70 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","33.04"
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.17",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.72",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","23.62",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","20.35",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 19.7 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 59.4% of the total average of 33.2 cycles between issuing two instructions.","global","33.04"
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 23.6 threads being active per cycle. This is further reduced to 20.3 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible.","global","23.72"
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","72,309.09",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","16,197,236",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","73,513.86",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","16,467,105",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 1911904 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","7.752"
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Block Size","","512",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Grid Size","","200",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","22",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","Kbyte/block","5.12",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Threads","thread","102,400",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","0.89",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","5",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","10",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","4",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","84.07",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","53.81",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (84.1%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","15.93"
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","126,007.83",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","6,179,840",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","181,302.38",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","11,039,770",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","182,349.77",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","9,158,208",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","181,302.38",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","11,039,770",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","177,685.68",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","44,159,080",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more SMs have a much higher number of active cycles than the average number of active cycles. Additionally, other SMs have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 6.99% above the average, while the minimum instance value is 7.97% below the average.","global","6.426"
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more SMSPs have a much higher number of active cycles than the average number of active cycles. Additionally, other SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 8.02% above the average, while the minimum instance value is 8.29% below the average.","global","7.232"
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L1 Slices have a much higher number of active cycles than the average number of active cycles. Additionally, other L1 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 6.99% above the average, while the minimum instance value is 7.97% below the average.","global","6.426"
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.16",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,657,565",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","45.54",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","3,214.96",
"3","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","17","(512, 1, 1)","(200, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 343584 excessive sectors (7% of the total 5126531 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","6.405"
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","928.75",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","33,228",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","0.85",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","0.71",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","35.78",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","29.12",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","1.30",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","558.66",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","0.28",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel grid is too small to fill the available resources on this device, resulting in only 0.0 full waves across all SMs. Look at Launch Statistics for more details.","",""
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Kbyte","524.29",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.53",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.01",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","13.32",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.53",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","13.32",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","95.84"
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","6.63",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","0.85",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","0.81",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","41.80",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","60.00",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","0.28",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 9.6 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 100.0% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.9115"
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global stores to L1TEX might not be optimal. On average, only 4.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global stores.","global","0.4284"
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","13.43",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.13",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","86.57",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","3.91",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.22",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 7.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 3.91 active warps per scheduler, but only an average of 0.22 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp State Statistics and Source Counters sections.","local","86.57"
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","29.11",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","29.32",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.88",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","28.22",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 11.3 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 38.9% of the total average of 29.1 cycles between issuing two instructions.","global","38.89"
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","73.88",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","16,548",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","74.41",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","16,668",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 1220 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","1.851"
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Block Size","","512",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","Kbyte/block","4.11",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Threads","thread","512",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","0.00",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","LaunchStats","","","","LaunchConfiguration","OPT","The grid for this launch is configured to execute only 1 blocks, which is less than the GPU's 56 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations.","global","98.21"
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","8",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","12",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","4",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","24.25",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","15.52",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (24.2%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","75.75"
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","309",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","1,041,920",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","558.66",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","1,860,712",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","10,155",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","1,543,440",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","558.66",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","1,860,712",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","553.96",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","7,442,848",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much higher number of active cycles than the average number of active cycles. Maximum instance value is 23.21% above the average, while the minimum instance value is 18.86% below the average.","global","7.331"
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.15",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,539",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","97.16",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","0.16",
"4","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","17","(512, 1, 1)","(1, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 5576 excessive sectors (78% of the total 7172 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","24.55"
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.18",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","909.25",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,882",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","0.52",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","0.14",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","3.17",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","20.42",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","0.52",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","19.59",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","0.00",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel grid is too small to fill the available resources on this device, resulting in only 0.0 full waves across all SMs. Look at Launch Statistics for more details.","",""
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Kbyte","524.29",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.00",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.00",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","0.18",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.01",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","0.18",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","99.86"
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","1.25",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","0.52",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","0.48",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","0",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","101.81",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","0",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","0.81",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.01",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","99.19",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","1",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.01",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 124.1 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 1.00 active warps per scheduler, but only an average of 0.01 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp State Statistics and Source Counters sections.","local","99.19"
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","124.13",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","248.25",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","1",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","1",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 117.1 cycles being stalled waiting for an immediate constant cache (IMC) miss. A read from constant memory costs one memory read from device memory only on a cache miss; otherwise, it just costs one read from the constant cache. Immediate constants are encoded into the SASS instruction as 'c[bank][offset]'. Accesses to different addresses by threads within a warp are serialized, thus the cost scales linearly with the number of unique addresses read by all threads within a warp. As such, the constant cache is best when threads in the same warp access only a few distinct locations. If all threads of a warp access the same location, then constant memory can be as fast as a register access. This stall type represents about 94.4% of the total average of 124.1 cycles between issuing two instructions.","global","94.36"
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 1.0 threads being active per cycle.","global","0.001201"
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","0.02",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","4",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","0.04",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","8",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Block Size","","1",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","26",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","32.77",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","0.00",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","LaunchStats","","","","LaunchConfiguration","OPT","Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 1 threads per block. Consequently, some threads in a warp are masked off and those hardware resources are unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256 threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to kernels that frequently call __syncthreads(). See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations.","global","96.88"
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","LaunchStats","","","","LaunchConfiguration","OPT","The grid for this launch is configured to execute only 1 blocks, which is less than the GPU's 56 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations.","global","98.21"
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","64",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","32",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","64",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","1.44",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","0.92",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (50.0%) and measured achieved occupancy (1.4%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","97.12"
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","","","","TheoreticalOccupancy","OPT","The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared memory.","global","50"
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","5.17",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","89,856",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","19.59",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","161,308",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","136.54",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","133,824",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","19.59",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","161,308",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","4.43",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","645,232",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.25",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","0",
"5","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 1:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","0",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.90",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","198,696",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","66.45",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","48.55",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","213.66",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","72.82",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","53.57",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","181,312.07",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","64.61",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","INF","Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. Check both the Compute Workload Analysis and Memory Workload Analysis sections.","",""
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 2% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","3.87",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","40,000",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.60",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","1.46",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","40.55",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.62",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","40.55",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","84.5"
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","452.87",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","66.45",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","64.61",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","42.65",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","31.35",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","64.61",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 23.5 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","17.64"
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global stores to L1TEX might not be optimal. On average, only 4.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global stores.","global","58.14"
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","41.30",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.41",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","58.70",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","13.72",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.70",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 2.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 13.72 active warps per scheduler, but only an average of 0.70 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","33.55"
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.22",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.78",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","23.62",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","20.35",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 19.7 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 59.3% of the total average of 33.2 cycles between issuing two instructions.","global","33.55"
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 23.6 threads being active per cycle. This is further reduced to 20.3 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible.","global","23.53"
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","72,309.09",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","16,197,236",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","73,516.92",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","16,467,789",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 1911904 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","7.752"
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Block Size","","512",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Grid Size","","200",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","22",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","Kbyte/block","5.12",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Threads","thread","102,400",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","0.89",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","5",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","10",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","4",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","84.20",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","53.89",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (84.2%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","15.8"
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","125,991.33",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","6,227,968",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","181,312.07",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","11,126,416",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","182,171.54",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","9,230,016",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","181,312.07",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","11,126,416",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","177,987.02",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","44,505,664",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more SMs have a much higher number of active cycles than the average number of active cycles. Additionally, other SMs have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 7.71% above the average, while the minimum instance value is 7.18% below the average.","global","7.038"
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more SMSPs have a much higher number of active cycles than the average number of active cycles. Additionally, other SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 7.59% above the average, while the minimum instance value is 9.11% below the average.","global","6.796"
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L1 Slices have a much higher number of active cycles than the average number of active cycles. Additionally, other L1 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 7.71% above the average, while the minimum instance value is 7.18% below the average.","global","7.038"
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.16",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,657,565",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","45.54",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","3,214.96",
"6","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_flat_kernel_old(int, int, const int *, const int *, const float *, const float *, float *, int *, float *)","1","18","(512, 1, 1)","(200, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 343584 excessive sectors (7% of the total 5126531 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","6.349"
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","928.03",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","33,202",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","0.85",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","0.71",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","35.78",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","29.15",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","1.30",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","558.36",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","0.28",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel grid is too small to fill the available resources on this device, resulting in only 0.0 full waves across all SMs. Look at Launch Statistics for more details.","",""
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Kbyte","524.29",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.53",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.01",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","13.33",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.53",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","13.33",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","95.84"
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","6.63",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","0.85",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","0.75",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","41.80",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","65.37",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","0.28",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 9.6 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 100.0% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.9102"
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global stores to L1TEX might not be optimal. On average, only 4.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global stores.","global","0.429"
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","13.39",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.13",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","86.61",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","3.92",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.22",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 7.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 3.92 active warps per scheduler, but only an average of 0.22 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp State Statistics and Source Counters sections.","local","86.61"
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","29.24",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","29.45",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.88",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","28.22",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 11.2 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 38.4% of the total average of 29.2 cycles between issuing two instructions.","global","38.37"
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","73.88",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","16,548",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","74.41",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","16,668",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 1220 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","1.852"
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Block Size","","512",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","Kbyte/block","4.11",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Threads","thread","512",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","0.00",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","LaunchStats","","","","LaunchConfiguration","OPT","The grid for this launch is configured to execute only 1 blocks, which is less than the GPU's 56 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations.","global","98.21"
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","8",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","12",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","4",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","24.37",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","15.60",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (24.4%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","75.63"
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","309",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","1,040,384",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","558.36",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","1,859,270",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","10,107.77",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","1,542,192",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","558.36",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","1,859,270",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","555.72",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","7,437,080",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much higher number of active cycles than the average number of active cycles. Additionally, other L2 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 18.24% above the average, while the minimum instance value is 18.77% below the average.","global","5.737"
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.15",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,539",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","97.16",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","0.16",
"7","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_reduce_update_kernel_one_block(int, const int *, const float *, float *)","1","18","(512, 1, 1)","(1, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 5576 excessive sectors (78% of the total 7172 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","24.46"
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.19",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","917.65",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,878",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","0.52",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","0.14",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","3.14",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","20.61",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","0.52",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","19.41",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","0.00",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel grid is too small to fill the available resources on this device, resulting in only 0.0 full waves across all SMs. Look at Launch Statistics for more details.","",""
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Kbyte","524.29",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.00",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.00",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","0.18",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.01",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","0.18",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","99.86"
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","1.27",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","0.52",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","0.38",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","0",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","99.41",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","0",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","0.81",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.01",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","99.19",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","1",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.01",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 124.1 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 1.00 active warps per scheduler, but only an average of 0.01 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp State Statistics and Source Counters sections.","local","99.19"
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","124.13",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","248.25",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","1",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","1",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 117.1 cycles being stalled waiting for an immediate constant cache (IMC) miss. A read from constant memory costs one memory read from device memory only on a cache miss; otherwise, it just costs one read from the constant cache. Immediate constants are encoded into the SASS instruction as 'c[bank][offset]'. Accesses to different addresses by threads within a warp are serialized, thus the cost scales linearly with the number of unique addresses read by all threads within a warp. As such, the constant cache is best when threads in the same warp access only a few distinct locations. If all threads of a warp access the same location, then constant memory can be as fast as a register access. This stall type represents about 94.4% of the total average of 124.1 cycles between issuing two instructions.","global","94.36"
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 1.0 threads being active per cycle.","global","0.001202"
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","0.02",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","4",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","0.04",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","8",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Block Size","","1",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","26",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","32.77",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","0.00",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","LaunchStats","","","","LaunchConfiguration","OPT","Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 1 threads per block. Consequently, some threads in a warp are masked off and those hardware resources are unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256 threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to kernels that frequently call __syncthreads(). See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations.","global","96.88"
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","LaunchStats","","","","LaunchConfiguration","OPT","The grid for this launch is configured to execute only 1 blocks, which is less than the GPU's 56 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations.","global","98.21"
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","64",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","32",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","64",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","1.45",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","0.93",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (50.0%) and measured achieved occupancy (1.5%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","97.1"
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Occupancy","","","","TheoreticalOccupancy","OPT","The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared memory.","global","50"
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","5.17",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","89,600",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","19.41",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","161,154",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","126.92",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","133,536",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","19.41",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","161,154",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","4.43",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","644,616",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.25",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","0",
"8","254427","SpMV","127.0.0.1","254427  ""<default domain>:COO_NEW_1 SortR specular.mtx 1 512 2:none:none:none:none:none:none"" ","","spmv_coo_serial_kernel(int, const int *, const int *, const float *, const float *, float *)","1","7","(1, 1, 1)","(1, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","0",
