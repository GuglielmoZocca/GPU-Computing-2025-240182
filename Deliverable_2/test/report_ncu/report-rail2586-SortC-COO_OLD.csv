"ID","Process ID","Process Name","Host Name","thread Domain:Push/Pop_Range:PL_Type:PL_Value:CLR_Type:Color:Msg_Type:Msg","Id:Domain:Start/Stop_Range:PL_Type:PL_Value:CLR_Type:Color:Msg_Type:Msg","Kernel Name","Context","Stream","Block Size","Grid Size","Device","CC","Section Name","Metric Name","Metric Unit","Metric Value","Rule Name","Rule Type","Rule Description","Estimated Speedup Type","Estimated Speedup"
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.97",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,264,048",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","10.77",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","4.46",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.43",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","8.55",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","15.25",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,257,696.18",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.47",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.10",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.10",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.48",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.10",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.48",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.91"
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","41.64",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","10.77",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","10.35",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","0.02",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","71.47",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.37",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 99.9% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.9913"
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.48",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.02",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.52",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.87",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.03",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 40.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.87 active warps per scheduler, but only an average of 0.03 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","89.23"
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","317.51",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","317.59",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.56",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","28.06",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 214.1 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 67.4% of the total average of 317.5 cycles between issuing two instructions.","global","67.43"
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","55,891.07",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,519,600",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","55,905.47",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,522,826",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 250496 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.5447"
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Block Size","","32",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Grid Size","","250,356",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","256",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,011,392",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","139.71",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","128",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","51",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","64",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.19",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.48",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","","","","TheoreticalOccupancy","OPT","The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that can fit on the SM.","global","50"
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","131,985.33",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","70,989,312",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,257,696.18",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","126,786,058",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","2,106,678.23",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","105,168,720",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,257,696.18",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","126,786,058",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,254,455.87",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","507,144,232",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.20",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,503,972",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","33.34",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","2,235.93",
"0","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 1668128 excessive sectors (28% of the total 6035785 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","26.57"
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.97",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,262,572",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","10.78",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","4.46",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.43",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","8.56",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","15.25",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,256,175.96",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.47",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.10",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.10",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.48",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.10",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.48",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.91"
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","41.66",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","10.78",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","10.36",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","0.02",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","71.52",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.37",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 99.9% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.9909"
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.48",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.02",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.52",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.87",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.03",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 40.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.87 active warps per scheduler, but only an average of 0.03 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","89.22"
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","317.37",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","317.45",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.56",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","28.06",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 214.9 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 67.7% of the total average of 317.4 cycles between issuing two instructions.","global","67.72"
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","55,891.07",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,519,600",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","55,905.49",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,522,829",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 250496 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.545"
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Block Size","","32",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Grid Size","","250,356",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","256",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,011,392",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","139.71",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","128",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","51",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","64",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.21",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.49",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","","","","TheoreticalOccupancy","OPT","The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that can fit on the SM.","global","50"
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","131,976.83",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","70,942,464",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,256,175.96",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","126,703,346",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","2,103,809.35",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","105,100,128",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,256,175.96",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","126,703,346",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,253,520.64",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","506,813,384",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.20",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,503,972",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","33.34",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","2,235.93",
"1","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 1668128 excessive sectors (28% of the total 6035785 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","26.55"
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.97",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,263,163",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","10.79",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","4.46",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.43",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","8.55",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","15.24",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,256,898.20",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.47",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.10",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.10",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.48",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.10",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.48",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.91"
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","41.65",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","10.79",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","10.36",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","0.02",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","71.48",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.37",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 99.9% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.9907"
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.48",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.02",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.52",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.87",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.03",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 40.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.87 active warps per scheduler, but only an average of 0.03 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","89.21"
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","316.85",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","316.93",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.56",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","28.06",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 214.7 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 67.8% of the total average of 316.9 cycles between issuing two instructions.","global","67.76"
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","55,891.07",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,519,600",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","55,905.48",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,522,827",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 250496 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.5449"
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Block Size","","32",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Grid Size","","250,356",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","256",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,011,392",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","139.71",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","128",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","51",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","64",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.11",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.43",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Occupancy","","","","TheoreticalOccupancy","OPT","The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that can fit on the SM.","global","50"
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","131,992",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","70,961,152",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,256,898.20",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","126,736,512",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","2,107,147.96",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","105,127,584",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,256,898.20",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","126,736,512",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,249,812.68",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","506,946,048",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.20",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,503,972",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","33.34",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","2,235.93",
"2","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(250356, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 1668128 excessive sectors (28% of the total 6035785 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","26.59"
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.97",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,131,047",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","11.13",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","4.74",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.29",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","9.02",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","16.05",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,123,211.68",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.57",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.10",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.10",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.58",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.10",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.58",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.84"
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","44.22",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","11.13",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","10.86",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","1.67",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","71.12",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.52",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 95.1% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.9929"
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.59",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.41",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.96",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.06",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 38.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 14.96 active warps per scheduler, but only an average of 0.06 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","88.87"
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","577.85",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","578.16",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.26",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","28.68",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 199.1 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 34.5% of the total average of 577.9 cycles between issuing two instructions.","global","34.45"
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","54,773.57",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,269,280",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","54,802.50",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,275,760",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 250498 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.5792"
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Block Size","","64",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Grid Size","","125,178",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","512",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,011,392",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","69.85",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","64",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","42",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","32",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","93.28",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","59.70",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","131,938.33",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","66,818,560",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,123,211.68",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","119,337,946",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,976,223.71",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","98,990,496",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,123,211.68",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","119,337,946",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,116,361.44",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","477,351,784",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.18",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,253,626",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","66.66",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","1,118.29",
"3","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 1668127 excessive sectors (28% of the total 6035784 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","26.48"
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,128,221",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","11.14",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","4.75",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.29",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","9.03",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","16.06",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,119,714.36",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.58",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.10",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.10",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.59",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.10",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.59",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.84"
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","44.29",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","11.14",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","10.87",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","1.68",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","71.05",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.52",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 95.1% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.9928"
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.59",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.41",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.97",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.06",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 38.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 14.97 active warps per scheduler, but only an average of 0.06 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","88.86"
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","578.49",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","578.79",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.26",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","28.68",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 199.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 34.4% of the total average of 578.5 cycles between issuing two instructions.","global","34.4"
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","54,773.57",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,269,280",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","54,802.64",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,275,792",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 250498 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.5801"
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Block Size","","64",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Grid Size","","125,178",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","512",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,011,392",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","69.85",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","64",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","42",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","32",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","93.54",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","59.86",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","131,986.50",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","66,729,984",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,119,714.36",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","119,179,802",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,978,253.10",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","98,859,312",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,119,714.36",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","119,179,802",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,117,817.91",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","476,719,208",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.18",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,253,626",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","66.66",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","1,118.29",
"4","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 1668127 excessive sectors (28% of the total 6035784 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","26.55"
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,128,432",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","11.13",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","4.75",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.29",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","9.03",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","16.07",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,120,685.82",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.57",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.10",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.10",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.58",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.10",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.58",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.84"
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","44.32",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","11.13",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","10.87",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","1.67",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","71.06",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.52",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 95.1% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.9939"
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.59",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.41",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.96",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.06",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 38.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 14.96 active warps per scheduler, but only an average of 0.06 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","88.87"
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","577.32",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","577.62",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.26",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","28.68",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 199.2 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 34.5% of the total average of 577.3 cycles between issuing two instructions.","global","34.5"
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","54,773.57",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,269,280",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","54,802.54",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,275,769",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 250498 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.5798"
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Block Size","","64",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Grid Size","","125,178",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","512",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,011,392",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","69.85",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","64",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","42",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","32",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","93.30",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","59.71",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","132,069.17",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","66,736,128",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,120,685.82",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","119,191,492",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,974,761.10",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","98,869,008",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,120,685.82",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","119,191,492",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,115,463.34",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","476,765,968",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.18",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,253,626",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","66.66",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","1,118.29",
"5","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(125178, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 1668127 excessive sectors (28% of the total 6035784 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","26.5"
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.97",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,129,858",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","11.10",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","4.74",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.29",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","8.99",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","16.03",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,121,313.18",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.55",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.10",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.10",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.56",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.10",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.56",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.84"
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","44.25",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","11.10",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","10.83",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","1.89",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","71.04",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.52",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 94.5% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.9845"
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.57",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.43",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.98",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.06",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 39.0 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 14.98 active warps per scheduler, but only an average of 0.06 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","88.9"
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","584.02",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","584.63",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.62",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.00",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 206.9 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 35.4% of the total average of 584.0 cycles between issuing two instructions.","global","35.43"
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","54,214.74",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,144,102",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","54,270.76",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,156,650",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 250498 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.5797"
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Block Size","","128",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Grid Size","","62,589",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","1.02",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,011,392",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","69.85",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","32",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","32",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","16",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","93.45",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","59.81",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","131,968.33",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","66,780,672",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,121,313.18",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","119,271,390",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,970,221.33",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","98,935,392",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,121,313.18",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","119,271,390",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,115,211.42",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","477,085,560",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.18",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,128,448",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","83.32",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","559.46",
"6","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 1668127 excessive sectors (28% of the total 6035784 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","26.42"
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.97",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,119,938",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","11.15",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","4.77",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.28",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","9.03",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","16.12",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,112,347.79",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.56",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.10",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.10",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.57",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.10",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.57",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.84"
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","44.46",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","11.15",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","10.89",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","1.89",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","71.11",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.53",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 94.5% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.9903"
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.56",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.44",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.98",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.06",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 39.0 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 14.98 active warps per scheduler, but only an average of 0.06 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","88.85"
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","583.99",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","584.59",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.62",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.00",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 206.8 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 35.4% of the total average of 584.0 cycles between issuing two instructions.","global","35.41"
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","54,214.74",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,144,102",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","54,270.62",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,156,618",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 250498 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.5821"
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Block Size","","128",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Grid Size","","62,589",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","1.02",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,011,392",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","69.85",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","32",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","32",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","16",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","93.84",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","60.06",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","131,970.67",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","66,468,864",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,112,347.79",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","118,715,828",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,967,215.52",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","98,474,496",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,112,347.79",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","118,715,828",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,115,949.85",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","474,863,312",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.18",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,128,448",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","83.32",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","559.46",
"7","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 1668127 excessive sectors (28% of the total 6035784 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","26.5"
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,126,761",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","11.12",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","4.75",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.29",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","9.00",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","16.08",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,119,083.91",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.55",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.10",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.10",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.56",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.10",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.56",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.84"
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","44.31",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","11.12",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","10.85",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","1.89",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","71.02",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.52",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 94.5% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.9881"
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.57",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.43",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.99",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.06",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 38.9 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 14.99 active warps per scheduler, but only an average of 0.06 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","88.88"
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","583.42",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","584.02",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.62",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.00",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 206.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 35.4% of the total average of 583.4 cycles between issuing two instructions.","global","35.38"
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","54,214.74",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,144,102",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","54,270.69",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,156,635",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 250498 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.5803"
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Block Size","","128",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Grid Size","","62,589",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","1.02",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,011,392",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","69.85",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","32",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","32",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","16",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","93.45",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","59.81",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","131,941.67",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","66,683,904",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,119,083.91",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","119,097,860",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,964,100.90",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","98,791,392",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,119,083.91",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","119,097,860",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,112,713.87",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","476,391,440",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.18",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,128,448",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","83.32",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","559.46",
"8","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(62589, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 1668127 excessive sectors (28% of the total 6035784 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","26.37"
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.97",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,126,844",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","11.06",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","4.75",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.29",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","8.92",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","15.99",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,118,363.52",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.54",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.10",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.10",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.55",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.10",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.55",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.84"
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","44.33",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","11.06",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","10.76",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.20",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","70.93",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.52",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 93.6% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.9733"
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.56",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.44",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.63",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.06",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 39.0 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 14.63 active warps per scheduler, but only an average of 0.06 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","88.94"
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","571.36",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","572.12",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.81",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.16",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 200.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 35.1% of the total average of 571.4 cycles between issuing two instructions.","global","35.11"
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","53,935.50",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,081,551",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","54,007.67",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,097,719",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 250499 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.5805"
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Block Size","","256",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Grid Size","","31,295",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","2.05",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,011,520",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","69.85",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","16",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","21",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","8",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","91.10",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","58.31",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","132,001.67",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","66,686,464",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,118,363.52",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","119,102,396",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,884,539.19",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","98,795,088",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,118,363.52",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","119,102,396",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,108,633.44",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","476,409,584",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 7.81% above the average, while the minimum instance value is 14.55% below the average.","global","7.15"
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,065,867",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","91.65",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","280.05",
"9","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 1668127 excessive sectors (28% of the total 6035784 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","25.31"
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,119,538",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","11.10",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","4.77",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.28",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","8.96",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","16.08",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,110,988.70",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.55",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.10",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.10",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.56",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.10",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.56",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.83"
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","44.48",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","11.10",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","10.80",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.20",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","70.91",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.53",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 93.6% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.9788"
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.56",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.44",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.64",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.06",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 39.0 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 14.64 active warps per scheduler, but only an average of 0.06 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","88.9"
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","571.59",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","572.36",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.81",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.16",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 201.3 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 35.2% of the total average of 571.6 cycles between issuing two instructions.","global","35.22"
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","53,935.50",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,081,551",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","54,007.86",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,097,761",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 250499 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.5825"
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Block Size","","256",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Grid Size","","31,295",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","2.05",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,011,520",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","69.85",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","16",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","21",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","8",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","91.46",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","58.53",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","131,983.50",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","66,457,472",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,110,988.70",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","118,693,400",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,884,604.17",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","98,455,776",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,110,988.70",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","118,693,400",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,108,648.24",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","474,773,600",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 7.68% above the average, while the minimum instance value is 14.88% below the average.","global","7.057"
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,065,867",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","91.65",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","280.05",
"10","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 1668127 excessive sectors (28% of the total 6035784 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","25.39"
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,117,366",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","11.10",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","4.77",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.28",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","8.97",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","16.06",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,108,697.55",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.55",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.10",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.10",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.56",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.10",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.56",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.83"
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","44.52",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","11.10",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","10.81",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.20",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","70.93",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.53",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 93.6% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.9774"
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.56",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.44",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.65",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.06",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 39.0 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 14.65 active warps per scheduler, but only an average of 0.06 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","88.9"
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","571.62",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","572.38",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.81",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.16",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 201.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 35.3% of the total average of 571.6 cycles between issuing two instructions.","global","35.26"
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","53,935.50",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,081,551",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","54,007.72",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,097,729",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 250499 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.5831"
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Block Size","","256",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Grid Size","","31,295",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","2.05",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,011,520",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","69.85",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","16",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","21",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","8",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","91.56",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","58.60",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","131,981.67",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","66,389,248",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,108,697.55",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","118,571,782",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,887,160.21",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","98,354,784",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,108,697.55",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","118,571,782",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,107,989.68",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","474,287,128",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 7.70% above the average, while the minimum instance value is 14.42% below the average.","global","7.092"
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,065,867",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","91.65",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","280.05",
"11","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31295, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 1668127 excessive sectors (28% of the total 6035784 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","25.45"
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,122,562",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","11.07",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","4.76",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.28",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","8.90",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","16.04",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,114,544.96",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.54",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.10",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.10",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.55",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.10",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.55",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.84"
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","44.40",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","11.07",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","10.79",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.35",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","70.92",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.53",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 93.1% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.9712"
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.55",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.45",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.00",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.06",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 39.1 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 14.00 active warps per scheduler, but only an average of 0.06 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","88.93"
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","548.05",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","548.86",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.90",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.25",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 177.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 32.4% of the total average of 548.1 cycles between issuing two instructions.","global","32.41"
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","53,796.03",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,050,310",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","53,875.76",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,068,170",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 250499 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.5815"
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Block Size","","512",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Grid Size","","15,648",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","4.10",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,011,776",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","69.86",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","8",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","12",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","4",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","87.34",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","55.89",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (87.3%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","12.66"
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","131,944.17",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","66,551,808",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,114,544.96",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","118,862,828",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,836,463.62",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","98,596,368",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,114,544.96",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","118,862,828",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,108,836.47",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","475,451,312",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 10.06% above the average, while the minimum instance value is 20.64% below the average.","global","8.998"
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,034,583",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","95.82",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","140.35",
"12","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 1668127 excessive sectors (28% of the total 6035784 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","24.71"
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,117,262",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","11.08",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","4.77",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.28",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","8.93",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","16.06",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,108,462.09",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.54",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.10",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.10",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.56",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.10",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.56",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.83"
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","44.50",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","11.08",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","10.82",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.35",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","70.86",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.53",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 93.1% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.9728"
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.56",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.44",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","13.99",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.06",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 39.1 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 13.99 active warps per scheduler, but only an average of 0.06 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","88.92"
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","546.90",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","547.71",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.90",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.25",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 176.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 32.2% of the total average of 546.9 cycles between issuing two instructions.","global","32.18"
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","53,796.03",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,050,310",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","53,875.72",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,068,162",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 250499 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.5832"
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Block Size","","512",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Grid Size","","15,648",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","4.10",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,011,776",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","69.86",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","8",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","12",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","4",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","87.40",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","55.94",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (87.4%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","12.6"
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","131,928.17",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","66,385,920",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,108,462.09",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","118,565,916",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,838,279.62",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","98,350,032",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,108,462.09",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","118,565,916",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,105,407.22",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","474,263,664",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 10.30% above the average, while the minimum instance value is 22.87% below the average.","global","9.238"
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,034,583",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","95.82",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","140.35",
"13","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 1668127 excessive sectors (28% of the total 6035784 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","24.8"
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.99",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,122,944",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","11.07",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","4.76",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.28",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","8.90",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","15.99",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,114,440.27",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.54",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.10",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.10",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.55",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.10",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.55",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.84"
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","44.38",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","11.07",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","10.79",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.35",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","70.93",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.53",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 93.1% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.9681"
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.56",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.44",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","13.99",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.06",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 39.1 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 13.99 active warps per scheduler, but only an average of 0.06 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","88.93"
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","546.62",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","547.43",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.90",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.25",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 178.1 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 32.6% of the total average of 546.6 cycles between issuing two instructions.","global","32.58"
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","53,796.03",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,050,310",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","53,875.72",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,068,162",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 250499 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.5816"
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Block Size","","512",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Grid Size","","15,648",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","4.10",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,011,776",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","69.86",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","8",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","12",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","4",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","87.11",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","55.75",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (87.1%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","12.89"
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","131,925.17",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","66,564,096",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,114,440.27",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","118,884,276",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,833,163.96",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","98,614,224",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,114,440.27",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","118,884,276",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,104,964.04",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","475,537,104",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 10.19% above the average, while the minimum instance value is 21.81% below the average.","global","9.092"
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,034,583",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","95.82",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","140.35",
"14","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15648, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 1668127 excessive sectors (28% of the total 6035784 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","24.66"
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,122,153",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","11.09",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","4.76",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.28",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","8.88",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","16.03",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,113,639.30",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.54",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.10",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.10",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.55",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.10",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.55",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.84"
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","44.44",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","11.09",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","10.82",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.43",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","70.90",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.53",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 92.9% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.9685"
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.56",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.44",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","12.45",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.07",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 39.1 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 12.45 active warps per scheduler, but only an average of 0.07 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp State Statistics and Source Counters sections.","local","88.91"
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","486.82",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","487.53",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.95",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.29",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 160.7 cycles being stalled after EXIT waiting for all outstanding memory operations to complete so that warp's resources can be freed. A high number of stalls due to draining warps typically occurs when a lot of data is written to memory towards the end of a kernel. Make sure the memory access patterns of these store operations are optimal for the target architecture and consider parallelized data reduction, if applicable. This stall type represents about 33.0% of the total average of 486.8 cycles between issuing two instructions.","global","33.01"
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","53,726.17",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,034,662",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","53,805.36",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,052,400",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 250499 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.5818"
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Block Size","","1,024",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Grid Size","","7,824",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","32.77",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","8.19",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,011,776",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","69.86",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","4",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","3",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","77.52",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","49.61",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (77.5%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","22.48"
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","132,042.33",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","66,538,496",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,113,639.30",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","118,839,854",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,770,598",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","98,577,360",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,113,639.30",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","118,839,854",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,103,735.08",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","475,359,416",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 12.92% above the average, while the minimum instance value is 26.17% below the average.","global","11.14"
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,018,935",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","97.90",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","70.49",
"15","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 1668127 excessive sectors (28% of the total 6035784 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","23.83"
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,118,779",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","11.11",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","4.77",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.28",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","8.90",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","16.07",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,110,221.38",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.54",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.10",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.10",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.55",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.10",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.55",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.83"
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","44.49",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","11.11",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","10.83",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.43",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","70.88",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.53",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 92.9% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.9706"
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.56",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.44",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","12.46",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.07",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 39.1 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 12.46 active warps per scheduler, but only an average of 0.07 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp State Statistics and Source Counters sections.","local","88.89"
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","487.42",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","488.14",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.95",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.29",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 160.4 cycles being stalled after EXIT waiting for all outstanding memory operations to complete so that warp's resources can be freed. A high number of stalls due to draining warps typically occurs when a lot of data is written to memory towards the end of a kernel. Make sure the memory access patterns of these store operations are optimal for the target architecture and consider parallelized data reduction, if applicable. This stall type represents about 32.9% of the total average of 487.4 cycles between issuing two instructions.","global","32.91"
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","53,726.17",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,034,662",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","53,805.25",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,052,376",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 250499 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.5827"
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Block Size","","1,024",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Grid Size","","7,824",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","32.77",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","8.19",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,011,776",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","69.86",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","4",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","3",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","77.74",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","49.75",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (77.7%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","22.26"
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","131,976",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","66,432,512",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,110,221.38",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","118,651,064",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,781,624.31",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","98,420,736",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,110,221.38",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","118,651,064",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,105,647.37",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","474,604,256",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 12.96% above the average, while the minimum instance value is 25.03% below the average.","global","11.26"
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,018,935",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","97.90",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","70.49",
"16","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 1668127 excessive sectors (28% of the total 6035784 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","24.01"
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,118,397",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","11.09",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","4.77",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.28",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","8.90",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","16.10",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,110,356.34",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.54",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.10",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.10",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.55",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.10",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.55",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.83"
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","44.50",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","11.09",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","10.84",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.43",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","70.98",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.53",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 92.9% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.9725"
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.55",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.45",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","12.45",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.07",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 39.1 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 12.45 active warps per scheduler, but only an average of 0.07 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp State Statistics and Source Counters sections.","local","88.91"
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","487.48",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","488.20",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.95",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.29",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 161.3 cycles being stalled after EXIT waiting for all outstanding memory operations to complete so that warp's resources can be freed. A high number of stalls due to draining warps typically occurs when a lot of data is written to memory towards the end of a kernel. Make sure the memory access patterns of these store operations are optimal for the target architecture and consider parallelized data reduction, if applicable. This stall type represents about 33.1% of the total average of 487.5 cycles between issuing two instructions.","global","33.09"
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","53,726.17",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,034,662",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","53,805.35",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,052,398",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 250499 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.5827"
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Block Size","","1,024",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Grid Size","","7,824",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","32.77",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","8.19",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,011,776",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","69.86",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","4",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","3",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","77.74",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","49.76",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (77.7%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","22.26"
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","131,999.67",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","66,422,272",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,110,356.34",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","118,629,518",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,780,099.79",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","98,402,880",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,110,356.34",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","118,629,518",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,106,381.74",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","474,518,072",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 12.88% above the average, while the minimum instance value is 25.49% below the average.","global","11.19"
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,018,935",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","97.90",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","70.49",
"17","233451","SpMV","127.0.0.1","233451  ""<default domain>:COO_OLD SortC rail2586.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7824, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 1668127 excessive sectors (28% of the total 6035784 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","24"
