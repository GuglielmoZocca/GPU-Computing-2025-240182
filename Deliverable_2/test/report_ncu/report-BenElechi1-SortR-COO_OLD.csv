"ID","Process ID","Process Name","Host Name","thread Domain:Push/Pop_Range:PL_Type:PL_Value:CLR_Type:Color:Msg_Type:Msg","Id:Domain:Start/Stop_Range:PL_Type:PL_Value:CLR_Type:Color:Msg_Type:Msg","Kernel Name","Context","Stream","Block Size","Grid Size","Device","CC","Section Name","Metric Name","Metric Unit","Metric Value","Rule Name","Rule Type","Rule Description","Estimated Speedup Type","Estimated Speedup"
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.96",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","480,021",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","46.24",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","17.57",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","516.16",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","46.52",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","18.73",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","477,134.68",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","59.93",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","2.82",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","80,000",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","2.41",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","2.40",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","60.29",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","2.41",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","60.29",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FMA is the highest-utilized pipeline (38.0%) based on active cycles, taking into account the rates of its different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD) operations. It is well-utilized, but should not be a bottleneck.","",""
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","163.90",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","46.24",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","42.68",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","6.52",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","36.06",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","42.68",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 29.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","4.284"
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","60.50",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.60",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","39.50",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.50",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.90",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","12.40",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","12.40",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","4.29",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","3.97",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 4.3 threads being active per cycle. This is further reduced to 4.0 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible.","global","52.49"
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","287,661.02",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","64,436,068",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","287,675.46",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","64,439,302",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 4733344 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","19"
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Block Size","","32",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Grid Size","","209,319",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","256",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Threads","thread","6,698,208",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","116.81",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","128",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","51",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","64",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","46.93",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","30.03",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","","","","TheoreticalOccupancy","OPT","The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that can fit on the SM.","local","50"
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","110,151.83",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","15,049,216",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","477,134.68",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","26,880,546",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","456,457.23",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","22,297,872",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","477,134.68",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","26,880,546",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","475,509.03",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","107,522,184",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","11,083,314",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","95.33",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","1,997.61",
"0","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 227745 excessive sectors (6% of the total 3785181 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","5.912"
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","930.02",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","479,573",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","46.28",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","17.59",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","515.65",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","46.55",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","18.69",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","476,788.61",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","59.99",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","2.82",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","80,000",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","2.41",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","2.40",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","60.34",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","2.41",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","60.34",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FMA is the highest-utilized pipeline (38.0%) based on active cycles, taking into account the rates of its different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD) operations. It is well-utilized, but should not be a bottleneck.","",""
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","164.07",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","46.28",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","42.72",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","6.54",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","36.15",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","42.72",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 29.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","4.288"
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","60.51",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.61",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","39.49",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.50",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.90",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","12.39",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","12.39",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","4.29",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","3.97",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 4.3 threads being active per cycle. This is further reduced to 4.0 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible.","global","52.54"
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","287,661.02",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","64,436,068",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","287,675.48",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","64,439,307",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 4733344 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","19.02"
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Block Size","","32",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Grid Size","","209,319",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","256",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Threads","thread","6,698,208",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","116.81",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","128",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","51",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","64",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","46.95",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","30.05",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","","","","TheoreticalOccupancy","OPT","The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that can fit on the SM.","local","50"
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","110,162.33",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","15,034,368",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","476,788.61",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","26,855,402",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","456,714.69",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","22,276,992",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","476,788.61",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","26,855,402",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","475,433.65",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","107,421,608",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","11,083,314",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","95.33",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","1,997.61",
"1","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 227745 excessive sectors (6% of the total 3785181 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","5.921"
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","479,525",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","46.29",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","17.59",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","515.62",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","46.55",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","18.71",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","476,838.98",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","59.99",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","2.82",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","80,000",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","2.41",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","2.40",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","60.33",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","2.41",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","60.33",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FMA is the highest-utilized pipeline (38.0%) based on active cycles, taking into account the rates of its different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD) operations. It is well-utilized, but should not be a bottleneck.","",""
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","164.11",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","46.29",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","42.73",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","6.54",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","36.10",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","42.73",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 29.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","4.289"
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","60.49",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.60",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","39.51",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.50",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.90",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","12.40",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","12.40",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","4.29",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","3.97",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 4.3 threads being active per cycle. This is further reduced to 4.0 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible.","global","52.55"
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","287,661.02",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","64,436,068",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","287,675.42",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","64,439,295",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 4733344 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","19.02"
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Block Size","","32",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Grid Size","","209,319",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","256",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Threads","thread","6,698,208",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","116.81",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","128",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","51",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","64",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","46.97",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","30.06",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Occupancy","","","","TheoreticalOccupancy","OPT","The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that can fit on the SM.","local","50"
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","110,182.67",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","15,033,344",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","476,838.98",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","26,852,728",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","456,397.73",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","22,274,832",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","476,838.98",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","26,852,728",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","475,604.44",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","107,410,912",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","11,083,314",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","95.33",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","1,997.61",
"2","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(209319, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 227745 excessive sectors (6% of the total 3785181 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","5.917"
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","930.07",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","331,088",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","66.12",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","25.48",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","355.97",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","66.68",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","26.53",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","328,299.41",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","87.54",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","INF","The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To further improve performance, work will likely need to be shifted from the most utilized to another unit. Start by analyzing workloads in the Compute Workload Analysis section.","",""
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 1% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Kbyte","524.29",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","3.53",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","3.50",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","88.28",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","3.53",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","88.28",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FMA is the highest-utilized pipeline (55.9%) based on active cycles, taking into account the rates of its different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD) operations. It is well-utilized, but should not be a bottleneck.","",""
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","237.71",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","66.12",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","62.50",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","15.18",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","32.38",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","62.50",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 29.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","6.127"
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","88.50",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.88",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","11.50",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","13.45",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","2.95",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","15.20",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","15.20",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","4.26",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","3.94",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 4.3 threads being active per cycle. This is further reduced to 3.9 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible.","global","76.75"
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","289,783.30",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","64,911,459",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","289,814.32",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","64,918,408",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 4790112 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","27.93"
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Block Size","","64",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Grid Size","","104,660",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","512",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Threads","thread","6,698,240",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","58.40",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","64",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","42",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","32",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","84.19",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","53.88",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (84.2%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","local","15.81"
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","110,178.33",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","10,379,264",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","328,299.41",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","18,540,186",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","313,736.77",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","15,379,680",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","328,299.41",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","18,540,186",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","327,478.62",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","74,160,744",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","10,990,816",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","97.51",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","1,077.50",
"3","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 215188 excessive sectors (6% of the total 3772624 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","5.585"
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","930.01",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","331,306",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","66.08",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","25.46",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","356.22",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","66.67",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","26.66",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","328,353.05",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","87.48",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","INF","The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To further improve performance, work will likely need to be shifted from the most utilized to another unit. Start by analyzing workloads in the Compute Workload Analysis section.","",""
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 1% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","2.82",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","80,000",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","3.53",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","3.50",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","88.26",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","3.53",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","88.26",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FMA is the highest-utilized pipeline (55.8%) based on active cycles, taking into account the rates of its different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD) operations. It is well-utilized, but should not be a bottleneck.","",""
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","237.48",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","66.08",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","62.45",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","15.17",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","32.21",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","62.45",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 29.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","6.122"
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","88.50",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.88",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","11.50",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","13.46",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","2.96",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","15.21",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","15.21",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","4.26",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","3.94",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 4.3 threads being active per cycle. This is further reduced to 3.9 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible.","global","76.7"
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","289,783.30",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","64,911,459",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","289,815.42",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","64,918,655",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 4790112 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","27.92"
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Block Size","","64",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Grid Size","","104,660",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","512",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Threads","thread","6,698,240",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","58.40",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","64",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","42",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","32",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","84.22",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","53.90",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (84.2%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","local","15.78"
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","110,151.17",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","10,384,896",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","328,353.05",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","18,552,408",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","313,655.17",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","15,389,856",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","328,353.05",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","18,552,408",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","327,487.26",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","74,209,632",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","10,990,816",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","97.51",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","1,077.50",
"4","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 215188 excessive sectors (6% of the total 3772624 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","5.58"
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","930.00",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","331,299",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","66.08",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","25.46",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","356.22",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","66.67",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","26.63",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","328,362.82",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","87.48",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","INF","The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To further improve performance, work will likely need to be shifted from the most utilized to another unit. Start by analyzing workloads in the Compute Workload Analysis section.","",""
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 1% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","2.82",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","80,000",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","3.53",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","3.50",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","88.26",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","3.53",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","88.26",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FMA is the highest-utilized pipeline (55.8%) based on active cycles, taking into account the rates of its different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD) operations. It is well-utilized, but should not be a bottleneck.","",""
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","237.58",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","66.08",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","62.46",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","15.21",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","32.29",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","62.46",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 29.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","6.123"
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","88.52",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.89",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","11.48",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","13.46",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","2.96",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","15.21",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","15.21",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","4.26",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","3.94",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 4.3 threads being active per cycle. This is further reduced to 3.9 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible.","global","76.7"
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","289,783.30",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","64,911,459",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","289,812.24",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","64,917,941",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 4790112 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","27.92"
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Block Size","","64",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Grid Size","","104,660",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","512",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Threads","thread","6,698,240",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","58.40",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","64",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","42",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","32",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","84.21",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","53.89",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (84.2%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","local","15.79"
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","110,195.33",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","10,385,920",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","328,362.82",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","18,552,058",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","313,537.50",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","15,389,568",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","328,362.82",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","18,552,058",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","327,403.12",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","74,208,232",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","10,990,816",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","97.51",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","1,077.50",
"5","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(104660, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 215188 excessive sectors (6% of the total 3772624 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","5.578"
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","930.02",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","350,414",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","66.81",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","24.07",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","376.77",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","67.34",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","25.17",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","347,637.95",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","90.24",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","INF","The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To further improve performance, work will likely need to be shifted from the most utilized to another unit. Start by analyzing workloads in the Compute Workload Analysis section.","",""
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 1% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","3.01",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","80,000",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","3.64",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","3.61",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","90.95",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","3.64",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","90.95",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FMA is the highest-utilized pipeline (57.9%) based on active cycles, taking into account the rates of its different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD) operations. It is well-utilized, but should not be a bottleneck.","",""
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","224.56",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","66.81",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","64.22",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","20.38",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","29.76",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","64.22",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 29.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","6.191"
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","91.11",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.91",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","8.89",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.24",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","3.47",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","15.63",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","15.63",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","3.90",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","3.62",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 3.9 threads being active per cycle. This is further reduced to 3.6 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible.","global","80.04"
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","316,133.99",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","70,814,014",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","316,189.70",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","70,826,492",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 5276081 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","28.93"
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Block Size","","128",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Grid Size","","52,330",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","1.02",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Threads","thread","6,698,240",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","58.40",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","32",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","32",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","16",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","89.17",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","57.07",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (89.2%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","local","10.83"
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","110,165.50",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","10,983,936",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","347,637.95",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","19,622,526",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","331,843.04",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","16,277,616",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","347,637.95",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","19,622,526",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","347,057.13",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","78,490,104",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","11,903,672",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","98.70",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","620.28",
"6","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 208932 excessive sectors (6% of the total 3766367 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","5.428"
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","930.01",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","350,409",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","66.81",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","24.08",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","376.77",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","67.33",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","25.11",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","347,710.07",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","90.24",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","INF","The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To further improve performance, work will likely need to be shifted from the most utilized to another unit. Start by analyzing workloads in the Compute Workload Analysis section.","",""
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 1% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","2.95",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","80,000",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","3.64",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","3.61",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","90.93",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","3.64",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","90.93",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FMA is the highest-utilized pipeline (57.8%) based on active cycles, taking into account the rates of its different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD) operations. It is well-utilized, but should not be a bottleneck.","",""
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","224.62",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","66.81",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","64.22",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","20.38",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","29.58",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","64.22",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 29.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","6.191"
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","91.09",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.91",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","8.91",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.24",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","3.47",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","15.63",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","15.63",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","3.90",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","3.62",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 3.9 threads being active per cycle. This is further reduced to 3.6 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible.","global","80.04"
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","316,133.99",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","70,814,014",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","316,190.00",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","70,826,559",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 5276081 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","28.92"
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Block Size","","128",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Grid Size","","52,330",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","1.02",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Threads","thread","6,698,240",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","58.40",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","32",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","32",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","16",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","89.16",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","57.06",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (89.2%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","local","10.84"
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","110,194.83",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","10,984,064",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","347,710.07",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","19,622,316",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","331,937.69",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","16,277,328",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","347,710.07",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","19,622,316",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","347,115.24",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","78,489,264",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","11,903,672",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","98.70",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","620.28",
"7","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 208932 excessive sectors (6% of the total 3766367 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","5.43"
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","930.03",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","350,448",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","66.80",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","24.07",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","376.80",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","67.34",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","25.07",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","347,642.64",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","90.23",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","INF","The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To further improve performance, work will likely need to be shifted from the most utilized to another unit. Start by analyzing workloads in the Compute Workload Analysis section.","",""
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 1% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","3.01",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","80,000",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","3.64",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","3.61",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","90.95",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","3.64",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","90.95",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FMA is the highest-utilized pipeline (57.9%) based on active cycles, taking into account the rates of its different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD) operations. It is well-utilized, but should not be a bottleneck.","",""
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","224.53",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","66.80",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","64.22",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","20.38",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","29.87",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","64.22",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 29.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","6.19"
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","91.08",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.91",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","8.92",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.24",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","3.48",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","15.64",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","15.64",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","3.90",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","3.62",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 3.9 threads being active per cycle. This is further reduced to 3.6 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible.","global","80.03"
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","316,133.99",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","70,814,014",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","316,189.77",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","70,826,508",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 5276081 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","28.93"
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Block Size","","128",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Grid Size","","52,330",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","1.02",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Threads","thread","6,698,240",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","58.40",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","32",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","32",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","16",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","89.20",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","57.09",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (89.2%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","local","10.8"
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","110,160",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","10,985,472",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","347,642.64",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","19,624,472",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","331,880.83",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","16,279,104",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","347,642.64",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","19,624,472",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","347,140.97",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","78,497,888",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","11,903,672",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","98.70",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","620.28",
"8","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(52330, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 208932 excessive sectors (6% of the total 3766367 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","5.428"
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","364,505",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","66.35",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","23.14",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","391.94",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","66.85",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","24.12",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","361,781.82",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","90.37",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","INF","The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To further improve performance, work will likely need to be shifted from the most utilized to another unit. Start by analyzing workloads in the Compute Workload Analysis section.","",""
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 1% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","3.01",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","80,000",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","3.64",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","3.61",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","91.05",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","3.64",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","91.05",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FMA is the highest-utilized pipeline (58.0%) based on active cycles, taking into account the rates of its different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD) operations. It is well-utilized, but should not be a bottleneck.","",""
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","215.88",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","66.35",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","64.23",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","22.79",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","28.49",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","64.23",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 29.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","6.148"
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","91.20",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.91",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","8.80",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.08",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","3.59",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","15.44",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","15.44",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","3.75",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","3.47",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 3.7 threads being active per cycle. This is further reduced to 3.5 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible.","global","80.57"
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","329,329.52",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","73,769,813",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","329,401.74",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","73,785,989",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 5519439 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","29.02"
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Block Size","","256",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Grid Size","","26,165",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","2.05",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Threads","thread","6,698,240",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","58.40",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","16",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","21",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","8",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","88.17",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","56.43",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.2%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","local","11.83"
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","110,170.50",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","11,427,840",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","361,781.82",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","20,411,580",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","344,864.15",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","16,932,000",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","361,781.82",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","20,411,580",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","361,195.79",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","81,646,320",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","12,360,863",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","99.22",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","391.71",
"9","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 205800 excessive sectors (5% of the total 3763235 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","5.346"
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","364,565",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","66.33",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","23.15",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","392",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","66.83",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","24.15",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","361,836.07",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","90.36",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","INF","The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To further improve performance, work will likely need to be shifted from the most utilized to another unit. Start by analyzing workloads in the Compute Workload Analysis section.","",""
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 1% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","3.01",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","80,000",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","3.64",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","3.61",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","91.04",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","3.64",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","91.04",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FMA is the highest-utilized pipeline (58.0%) based on active cycles, taking into account the rates of its different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD) operations. It is well-utilized, but should not be a bottleneck.","",""
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","215.93",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","66.33",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","64.22",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","22.80",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","28.58",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","64.22",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 29.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","6.146"
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","91.22",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.91",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","8.78",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.09",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","3.59",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","15.44",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","15.45",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","3.75",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","3.47",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 3.7 threads being active per cycle. This is further reduced to 3.5 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible.","global","80.56"
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","329,329.52",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","73,769,813",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","329,401.79",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","73,786,001",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 5519439 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","29.02"
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Block Size","","256",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Grid Size","","26,165",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","2.05",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Threads","thread","6,698,240",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","58.40",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","16",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","21",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","8",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","88.17",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","56.43",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.2%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","local","11.83"
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","110,214.33",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","11,427,840",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","361,836.07",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","20,414,954",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","344,885.69",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","16,934,784",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","361,836.07",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","20,414,954",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","361,113.28",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","81,659,816",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","12,360,863",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","99.22",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","391.71",
"10","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 205800 excessive sectors (5% of the total 3763235 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","5.346"
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","930.01",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","364,725",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","66.31",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","23.12",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","392.16",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","66.85",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","23.97",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","361,758.96",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","90.32",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","INF","The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To further improve performance, work will likely need to be shifted from the most utilized to another unit. Start by analyzing workloads in the Compute Workload Analysis section.","",""
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 1% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","3.01",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","80,000",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","3.64",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","3.61",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","91.06",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","3.64",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","91.06",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FMA is the highest-utilized pipeline (58.1%) based on active cycles, taking into account the rates of its different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD) operations. It is well-utilized, but should not be a bottleneck.","",""
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","215.67",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","66.31",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","64.19",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","22.80",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","28.67",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","64.19",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 29.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","6.144"
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","91.21",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.91",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","8.79",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.09",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","3.59",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","15.45",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","15.45",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","3.75",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","3.47",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 3.7 threads being active per cycle. This is further reduced to 3.5 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible.","global","80.52"
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","329,329.52",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","73,769,813",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","329,401.74",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","73,785,989",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 5519439 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","29.03"
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Block Size","","256",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Grid Size","","26,165",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","2.05",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Threads","thread","6,698,240",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","58.40",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","16",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","21",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","8",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","88.21",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","56.45",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.2%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","local","11.79"
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","110,126.50",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","11,432,960",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","361,758.96",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","20,423,956",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","344,980.96",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","16,942,320",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","361,758.96",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","20,423,956",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","361,151.49",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","81,695,824",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","12,360,863",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","99.22",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","391.71",
"11","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(26165, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 205800 excessive sectors (5% of the total 3763235 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","5.345"
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.99",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","377,244",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","65.17",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","22.35",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","405.63",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","65.69",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","23.16",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","374,213.34",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","89.06",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","INF","The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To further improve performance, work will likely need to be shifted from the most utilized to another unit. Start by analyzing workloads in the Compute Workload Analysis section.","",""
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","3.01",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","80,000",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","3.59",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","3.56",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","89.78",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","3.59",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","89.78",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FMA is the highest-utilized pipeline (57.3%) based on active cycles, taking into account the rates of its different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD) operations. It is well-utilized, but should not be a bottleneck.","",""
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","208.54",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","65.17",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","63.26",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","24.32",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","27.55",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","63.26",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 29.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","6.038"
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","89.97",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.90",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","10.03",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.15",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","3.79",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","15.72",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","15.73",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","3.67",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","3.40",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 3.7 threads being active per cycle. This is further reduced to 3.4 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible.","global","79.59"
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","335,892.51",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","75,239,923",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","335,972.11",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","75,257,753",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 5640472 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","28.65"
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Block Size","","512",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Grid Size","","13,083",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","4.10",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Threads","thread","6,698,496",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","58.41",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","8",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","12",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","4",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","88.52",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","56.65",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.5%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","local","11.48"
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","110,144.17",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","11,826,176",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","374,213.34",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","21,125,048",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","353,149.40",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","17,523,792",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","374,213.34",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","21,125,048",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","373,431.52",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","84,500,192",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","12,588,152",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","99.46",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","277.41",
"12","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 204303 excessive sectors (5% of the total 3761738 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","5.254"
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","930.00",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","377,188",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","65.18",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","22.36",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","405.57",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","65.71",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","23.19",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","374,127.98",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","89.08",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","INF","The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To further improve performance, work will likely need to be shifted from the most utilized to another unit. Start by analyzing workloads in the Compute Workload Analysis section.","",""
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","3.01",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","80,000",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","3.59",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","3.56",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","89.80",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","3.59",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","89.80",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FMA is the highest-utilized pipeline (57.3%) based on active cycles, taking into account the rates of its different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD) operations. It is well-utilized, but should not be a bottleneck.","",""
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","208.60",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","65.18",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","63.27",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","24.31",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","27.59",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","63.27",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 29.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","6.039"
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","89.97",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.90",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","10.03",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.14",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","3.80",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","15.72",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","15.72",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","3.67",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","3.40",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 3.7 threads being active per cycle. This is further reduced to 3.4 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible.","global","79.6"
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","335,892.51",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","75,239,923",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","335,972.21",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","75,257,775",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 5640472 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","28.66"
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Block Size","","512",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Grid Size","","13,083",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","4.10",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Threads","thread","6,698,496",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","58.41",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","8",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","12",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","4",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","88.53",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","56.66",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.5%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","local","11.47"
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","110,160.17",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","11,824,128",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","374,127.98",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","21,121,884",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","352,319.92",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","17,521,248",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","374,127.98",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","21,121,884",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","373,412.51",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","84,487,536",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","12,588,152",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","99.46",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","277.41",
"13","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 204303 excessive sectors (5% of the total 3761738 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","5.242"
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","377,242",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","65.17",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","22.36",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","405.63",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","65.71",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","23.16",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","374,114",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","89.06",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","INF","The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To further improve performance, work will likely need to be shifted from the most utilized to another unit. Start by analyzing workloads in the Compute Workload Analysis section.","",""
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","3.01",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","80,000",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","3.59",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","3.56",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","89.80",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","3.59",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","89.80",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FMA is the highest-utilized pipeline (57.3%) based on active cycles, taking into account the rates of its different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD) operations. It is well-utilized, but should not be a bottleneck.","",""
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","208.57",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","65.17",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","63.26",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","24.31",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","27.56",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","63.26",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 29.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","6.039"
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","89.94",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.90",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","10.06",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.14",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","3.78",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","15.72",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","15.73",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","3.67",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","3.40",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 3.7 threads being active per cycle. This is further reduced to 3.4 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible.","global","79.59"
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","335,892.51",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","75,239,923",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","335,972.17",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","75,257,767",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 5640472 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","28.66"
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Block Size","","512",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Grid Size","","13,083",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","4.10",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Threads","thread","6,698,496",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","58.41",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","8",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","12",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","4",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","88.55",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","56.67",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.5%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","local","11.45"
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","110,157.50",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","11,826,176",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","374,114",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","21,124,908",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","350,192.08",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","17,523,792",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","374,114",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","21,124,908",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","373,570.12",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","84,499,632",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","12,588,152",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","99.46",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","277.41",
"14","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(13083, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 204303 excessive sectors (5% of the total 3761738 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","5.21"
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","930.01",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","388,951",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","63.65",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","21.69",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","418.21",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","64.27",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","22.37",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","385,233.64",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","87.23",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","INF","The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To further improve performance, work will likely need to be shifted from the most utilized to another unit. Start by analyzing workloads in the Compute Workload Analysis section.","",""
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","3.15",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","80,000",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","3.52",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","3.49",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","88.07",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","3.52",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","88.07",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FMA is the highest-utilized pipeline (56.2%) based on active cycles, taking into account the rates of its different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD) operations. It is well-utilized, but should not be a bottleneck.","",""
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","202.36",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","63.65",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","61.94",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","25.10",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","27.01",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","61.94",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 29.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","5.898"
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","88.23",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.88",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","11.77",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.15",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","4.04",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","16.03",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","16.04",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","3.64",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","3.37",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 3.6 threads being active per cycle. This is further reduced to 3.4 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible.","global","78.04"
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","339,187.31",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","75,977,958",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","339,266.38",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","75,995,668",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 5701227 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","28.12"
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Block Size","","1,024",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Grid Size","","6,542",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","32.77",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","8.19",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Threads","thread","6,699,008",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","58.41",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","4",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","3",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","88.54",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","56.66",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.5%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","local","11.46"
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","110,191.33",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","12,192,768",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","385,233.64",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","21,780,500",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","341,968.40",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","18,067,440",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","385,233.64",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","21,780,500",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","384,509.68",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","87,122,000",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","12,702,285",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","99.58",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","220.19",
"15","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 203486 excessive sectors (5% of the total 3760921 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","4.916"
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","930.00",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","388,916",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","63.66",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","21.69",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","418.18",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","64.27",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","22.38",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","385,204.12",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","87.24",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","INF","The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To further improve performance, work will likely need to be shifted from the most utilized to another unit. Start by analyzing workloads in the Compute Workload Analysis section.","",""
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","3.01",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","80,000",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","3.52",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","3.49",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","88.07",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","3.52",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","88.07",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FMA is the highest-utilized pipeline (56.2%) based on active cycles, taking into account the rates of its different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD) operations. It is well-utilized, but should not be a bottleneck.","",""
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","202.34",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","63.66",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","61.94",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","25.11",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","27.12",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","61.94",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 29.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","5.898"
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","88.18",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.88",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","11.82",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.15",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","4.04",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","16.05",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","16.05",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","3.64",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","3.37",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 3.6 threads being active per cycle. This is further reduced to 3.4 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible.","global","78.05"
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","339,187.31",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","75,977,958",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","339,266.34",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","75,995,660",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 5701227 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","28.12"
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Block Size","","1,024",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Grid Size","","6,542",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","32.77",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","8.19",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Threads","thread","6,699,008",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","58.41",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","4",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","3",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","88.62",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","56.72",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.6%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","local","11.38"
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","110,175.83",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","12,192,768",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","385,204.12",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","21,778,596",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","337,659.10",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","18,065,904",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","385,204.12",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","21,778,596",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","384,746.90",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","87,114,384",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","12,702,285",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","99.58",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","220.19",
"16","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 203486 excessive sectors (5% of the total 3760921 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","4.854"
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","930.03",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","388,957",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","63.65",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","21.68",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","418.21",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","64.30",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","22.36",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","385,041.12",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","87.23",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","INF","The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To further improve performance, work will likely need to be shifted from the most utilized to another unit. Start by analyzing workloads in the Compute Workload Analysis section.","",""
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","3.01",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","80,000",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","3.52",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","3.49",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","88.11",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","3.52",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","88.11",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FMA is the highest-utilized pipeline (56.3%) based on active cycles, taking into account the rates of its different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD) operations. It is well-utilized, but should not be a bottleneck.","",""
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","202.23",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","63.65",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","61.94",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","25.11",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","27.12",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","61.94",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 29.0 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","5.898"
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","88.21",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.88",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","11.79",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.15",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","4.05",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","16.04",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","16.04",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","3.64",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","3.37",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","WarpStateStats","","","","ThreadDivergence","OPT","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 3.6 threads being active per cycle. This is further reduced to 3.4 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible.","global","78.04"
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","339,187.31",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","75,977,958",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","339,266.35",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","75,995,662",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 5701227 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","28.13"
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Block Size","","1,024",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Grid Size","","6,542",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","32.77",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","8.19",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Threads","thread","6,699,008",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","58.41",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","4",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","3",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","88.60",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","56.71",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.6%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","local","11.4"
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","110,123.50",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","12,192,768",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","385,041.12",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","21,780,962",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","340,959.38",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","18,067,872",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","385,041.12",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","21,780,962",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","384,604.99",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","87,123,848",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","12,702,285",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","99.58",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","220.19",
"17","225302","SpMV","127.0.0.1","225302  ""<default domain>:COO_OLD SortR BenElechi1.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(6542, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 203486 excessive sectors (5% of the total 3760921 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","4.901"
