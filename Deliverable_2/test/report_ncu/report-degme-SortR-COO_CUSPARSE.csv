"ID","Process ID","Process Name","Host Name","thread Domain:Push/Pop_Range:PL_Type:PL_Value:CLR_Type:Color:Msg_Type:Msg","Id:Domain:Start/Stop_Range:PL_Type:PL_Value:CLR_Type:Color:Msg_Type:Msg","Kernel Name","Context","Stream","Block Size","Grid Size","Device","CC","Section Name","Metric Name","Metric Unit","Metric Value","Rule Name","Rule Type","Rule Description","Estimated Speedup Type","Estimated Speedup"
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.19",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","915.25",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","4,429",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","12.16",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","0.09",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","4.83",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","28.39",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","15.25",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1,473.07",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","7.78",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel grid is too small to fill the available resources on this device, resulting in only 0.4 full waves across all SMs. Look at Launch Statistics for more details.","",""
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Kbyte","524.29",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.79",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.26",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.37",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.37",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","87.68"
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Mbyte/second","821.19",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","6.32",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","12.16",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","0.00",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","99.95",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","1.17",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 4.0 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 100.0% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","13.34"
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global stores to L2 might not be optimal. On average, only 32.0 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 100.0% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global stores.","global","0.000904"
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","26.24",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.26",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","73.76",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","5.32",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.67",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.8 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 5.32 active warps per scheduler, but only an average of 0.67 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp State Statistics and Source Counters sections.","local","73.76"
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","20.27",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","23.92",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.99",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.86",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 12.3 cycles being stalled waiting for an immediate constant cache (IMC) miss. A read from constant memory costs one memory read from device memory only on a cache miss; otherwise, it just costs one read from the constant cache. Immediate constants are encoded into the SASS instruction as 'c[bank][offset]'. Accesses to different addresses by threads within a warp are serialized, thus the cost scales linearly with the number of unique addresses read by all threads within a warp. As such, the constant cache is best when threads in the same warp access only a few distinct locations. If all threads of a warp access the same location, then constant memory can be as fast as a register access. This stall type represents about 60.8% of the total average of 20.3 cycles between issuing two instructions.","global","60.85"
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","291.66",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","65,331",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","344.24",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","77,109",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 1 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","4.4"
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Block Size","","128",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Grid Size","","363",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","32.77",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Threads","thread","46,464",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","0.41",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","32",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","32",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","16",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","30.12",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","19.28",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (30.1%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","69.88"
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","5.17",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","138,240",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","1,473.07",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","247,660",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,681.98",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","205,632",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","1,473.07",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","247,660",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","1,311.76",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","990,640",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more SMs have a much higher number of active cycles than the average number of active cycles. Maximum instance value is 36.20% above the average, while the minimum instance value is 13.72% below the average.","global","12.06"
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more SMSPs have a much higher number of active cycles than the average number of active cycles. Maximum instance value is 40.64% above the average, while the minimum instance value is 14.16% below the average.","global","12.06"
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L1 Slices have a much higher number of active cycles than the average number of active cycles. Maximum instance value is 36.20% above the average, while the minimum instance value is 13.72% below the average.","global","12.06"
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 14.71% above the average, while the minimum instance value is 17.95% below the average.","global","5.774"
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.20",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","13,068",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","99.99",
"0","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","0.00",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","930.19",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","137,978",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","75.01",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","75.01",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","148.32",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","49.28",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","69.75",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","131,765.02",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","32.10",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","Memory is more heavily utilized than Compute: Look at the Memory Workload Analysis section to identify the DRAM bottleneck. Check memory replay (coalescing) metrics to make sure you're efficiently utilizing the bytes transferred. Also consider whether it is possible to do more work per memory access (kernel fusion) or whether there are values you can (re)compute.","",""
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 3% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.34",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","1.28",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","33.61",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.34",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","33.61",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (28.4%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck.","",""
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","699.66",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","47.06",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","75.01",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","58.00",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","32.58",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","23.90",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 13.9 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","26.63"
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global stores to L1TEX might not be optimal. On average, only 13.8 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global stores.","global","26.74"
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","SharedMemoryConflicts","OPT","The memory access pattern for shared loads might not be optimal and causes on average a 8.3 - way bank conflict across all 63504 shared load requests.This results in 254270 bank conflicts,  which represent 48.49% of the overall 524352 wavefronts for shared loads. Check the Source Counters section for uncoalesced shared loads.","global","23.9"
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","34.11",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.34",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","65.89",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","15.00",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","1.50",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 2.9 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 15.00 active warps per scheduler, but only an average of 1.50 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","24.99"
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","43.96",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","44.13",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.89",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","25.20",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 30.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 68.3% of the total average of 44.0 cycles between issuing two instructions.","global","24.99"
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","44,108.29",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","9,880,257",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","44,284.17",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","9,919,653",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 1035611 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","10.31"
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Block Size","","256",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Grid Size","","3,969",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","32",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","102.40",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","Kbyte/block","8.19",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1,016,064",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","8.86",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","8",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","11",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","8",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","92.46",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","59.18",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","135,121.67",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","4,323,328",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","131,765.02",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","7,726,054",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","128,366.69",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","6,409,344",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","131,765.02",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","7,726,054",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","129,820.07",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","30,904,216",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.04",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","393,262",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","87.76",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","130.86",
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 5332531 excessive sectors (56% of the total 9457369 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","54.21"
"1","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 0:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedSharedAccess","OPT","This kernel has uncoalesced shared accesses resulting in a total of 254016 excessive wavefronts (33% of the total 762048 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations. The CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c-ab) has an example on optimizing shared memory accesses.","global","31.84"
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.20",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","914.57",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","4,484",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","12.01",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","0.09",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","4.90",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","27.65",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","15.08",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1,512.07",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","7.69",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel grid is too small to fill the available resources on this device, resulting in only 0.4 full waves across all SMs. Look at Launch Statistics for more details.","",""
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Kbyte","524.29",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.77",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.26",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","22.76",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.91",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","22.76",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","88"
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Mbyte/second","810.46",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","6.24",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","12.01",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","0.00",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","99.94",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","1.16",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 4.0 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 100.0% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","13.19"
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global stores to L2 might not be optimal. On average, only 32.0 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 100.0% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global stores.","global","0.0008941"
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","25.96",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.26",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","74.04",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","5.33",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.9 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 5.33 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp State Statistics and Source Counters sections.","local","74.04"
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","20.54",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","24.24",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.99",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.86",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 12.4 cycles being stalled waiting for an immediate constant cache (IMC) miss. A read from constant memory costs one memory read from device memory only on a cache miss; otherwise, it just costs one read from the constant cache. Immediate constants are encoded into the SASS instruction as 'c[bank][offset]'. Accesses to different addresses by threads within a warp are serialized, thus the cost scales linearly with the number of unique addresses read by all threads within a warp. As such, the constant cache is best when threads in the same warp access only a few distinct locations. If all threads of a warp access the same location, then constant memory can be as fast as a register access. This stall type represents about 60.2% of the total average of 20.5 cycles between issuing two instructions.","global","60.21"
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","291.66",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","65,331",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","344.18",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","77,097",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 1 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","4.286"
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Block Size","","128",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Grid Size","","363",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","32.77",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Threads","thread","46,464",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","0.41",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","32",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","32",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","16",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","29.73",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","19.03",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (29.7%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","70.27"
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","5.17",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","140,800",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","1,512.07",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","250,754",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,685.15",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","208,176",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","1,512.07",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","250,754",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","1,326.07",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","1,003,016",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more SMs have a much higher number of active cycles than the average number of active cycles. Maximum instance value is 36.49% above the average, while the minimum instance value is 11.45% below the average.","global","12.32"
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more SMSPs have a much higher number of active cycles than the average number of active cycles. Maximum instance value is 41.04% above the average, while the minimum instance value is 12.75% below the average.","global","12.15"
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L1 Slices have a much higher number of active cycles than the average number of active cycles. Maximum instance value is 36.49% above the average, while the minimum instance value is 11.45% below the average.","global","12.32"
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much higher number of active cycles than the average number of active cycles. Additionally, other L2 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 15.49% above the average, while the minimum instance value is 16.51% below the average.","global","6.018"
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.20",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","13,068",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","99.99",
"2","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","0.00",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","930.23",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","140,485",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","73.68",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","73.68",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","151.01",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","48.87",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","68.76",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","132,829.61",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","31.53",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","Memory is more heavily utilized than Compute: Look at the Memory Workload Analysis section to identify the DRAM bottleneck. Check memory replay (coalescing) metrics to make sure you're efficiently utilizing the bytes transferred. Also consider whether it is possible to do more work per memory access (kernel fusion) or whether there are values you can (re)compute.","",""
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 3% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.33",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","1.26",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","33.34",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.33",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","33.34",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (28.2%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck.","",""
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","687.29",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","46.21",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","73.68",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","58.02",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","32.57",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","23.47",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 13.9 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","26.14"
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global stores to L1TEX might not be optimal. On average, only 13.8 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global stores.","global","26.25"
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","SharedMemoryConflicts","OPT","The memory access pattern for shared loads might not be optimal and causes on average a 8.3 - way bank conflict across all 63504 shared load requests.This results in 254329 bank conflicts,  which represent 48.50% of the overall 524402 wavefronts for shared loads. Check the Source Counters section for uncoalesced shared loads.","global","23.7"
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","34.40",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.34",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","65.60",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","15.00",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","1.52",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 2.9 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 15.00 active warps per scheduler, but only an average of 1.52 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","26.32"
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","43.61",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","43.78",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.89",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","25.20",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 29.5 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 67.5% of the total average of 43.6 cycles between issuing two instructions.","global","26.32"
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","44,108.29",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","9,880,257",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","44,283.98",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","9,919,612",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 1035611 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","10.23"
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Block Size","","256",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Grid Size","","3,969",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","32",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","102.40",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","Kbyte/block","8.19",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1,016,064",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","8.86",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","8",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","11",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","8",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","90.99",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","58.23",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","135,139.17",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","4,401,664",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","132,829.61",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","7,866,446",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","125,772.79",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","6,525,792",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","132,829.61",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","7,866,446",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","128,739.66",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","31,465,784",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.04",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","393,262",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","87.76",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","130.86",
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 5332531 excessive sectors (56% of the total 9457369 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","52.16"
"3","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 1:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedSharedAccess","OPT","This kernel has uncoalesced shared accesses resulting in a total of 254016 excessive wavefronts (33% of the total 762048 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations. The CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c-ab) has an example on optimizing shared memory accesses.","global","31.52"
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","919.77",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","4,481",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","12.02",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","0.09",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","4.86",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","27.76",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","15.07",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1,509.79",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","7.70",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel grid is too small to fill the available resources on this device, resulting in only 0.4 full waves across all SMs. Look at Launch Statistics for more details.","",""
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Kbyte","524.29",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.77",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.26",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","22.80",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.91",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","22.80",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","87.98"
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Mbyte/second","842.11",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","6.25",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","12.02",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","0.00",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","99.86",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","1.16",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 4.0 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 100.0% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","13.18"
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global stores to L2 might not be optimal. On average, only 32.0 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 100.0% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global stores.","global","0.0008934"
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","26.23",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.26",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","73.77",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","5.32",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.67",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.8 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 5.32 active warps per scheduler, but only an average of 0.67 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp State Statistics and Source Counters sections.","local","73.77"
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","20.30",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","23.96",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.99",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.86",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 12.4 cycles being stalled waiting for an immediate constant cache (IMC) miss. A read from constant memory costs one memory read from device memory only on a cache miss; otherwise, it just costs one read from the constant cache. Immediate constants are encoded into the SASS instruction as 'c[bank][offset]'. Accesses to different addresses by threads within a warp are serialized, thus the cost scales linearly with the number of unique addresses read by all threads within a warp. As such, the constant cache is best when threads in the same warp access only a few distinct locations. If all threads of a warp access the same location, then constant memory can be as fast as a register access. This stall type represents about 60.9% of the total average of 20.3 cycles between issuing two instructions.","global","60.92"
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","291.66",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","65,331",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","344.28",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","77,118",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 1 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","4.293"
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Block Size","","128",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Grid Size","","363",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","32.77",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Threads","thread","46,464",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","0.41",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","32",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","32",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","16",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","29.43",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","18.84",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (29.4%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","70.57"
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","5.33",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","141,312",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","1,509.79",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","250,530",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,698.65",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","208,032",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","1,509.79",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","250,530",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","1,312.56",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","1,002,120",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more SMs have a much higher number of active cycles than the average number of active cycles. Maximum instance value is 37.20% above the average, while the minimum instance value is 11.38% below the average.","global","12.55"
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more SMSPs have a much higher number of active cycles than the average number of active cycles. Maximum instance value is 40.88% above the average, while the minimum instance value is 13.98% below the average.","global","11.99"
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L1 Slices have a much higher number of active cycles than the average number of active cycles. Maximum instance value is 37.20% above the average, while the minimum instance value is 11.38% below the average.","global","12.55"
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much higher number of active cycles than the average number of active cycles. Additionally, other L2 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 15.15% above the average, while the minimum instance value is 15.99% below the average.","global","5.939"
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.20",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","13,068",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","99.99",
"4","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::vector_scalar_multiply_kernel<cusparse::VectorWiseMulPolicy<(bool)1, float>, long, float, float>(cusparse::KernelCoeff<T3>, T2, T4 *)","1","7","(128, 1, 1)","(363, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","0.00",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","930.15",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","139,818",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","74.07",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","74.07",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","150.30",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","49.05",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","69.00",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","132,407.36",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","31.68",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","Memory is more heavily utilized than Compute: Look at the Memory Workload Analysis section to identify the DRAM bottleneck. Check memory replay (coalescing) metrics to make sure you're efficiently utilizing the bytes transferred. Also consider whether it is possible to do more work per memory access (kernel fusion) or whether there are values you can (re)compute.","",""
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 3% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.33",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","1.26",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","33.45",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.34",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","33.45",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (28.3%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck.","",""
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","690.85",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","46.46",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","74.07",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","57.97",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","32.55",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","23.59",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L1TEX might not be optimal. On average, only 13.9 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","26.28"
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global stores to L1TEX might not be optimal. On average, only 13.8 of the 32 bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global stores.","global","26.39"
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","SharedMemoryConflicts","OPT","The memory access pattern for shared loads might not be optimal and causes on average a 8.3 - way bank conflict across all 63504 shared load requests.This results in 254286 bank conflicts,  which represent 48.48% of the overall 524570 wavefronts for shared loads. Check the Source Counters section for uncoalesced shared loads.","global","23.78"
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","34.41",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.34",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","65.59",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","15.02",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","1.51",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 2.9 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 15.02 active warps per scheduler, but only an average of 1.51 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","25.93"
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","43.65",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","43.83",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.89",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","25.20",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 30.1 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 69.0% of the total average of 43.7 cycles between issuing two instructions.","global","25.93"
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","44,108.29",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","9,880,257",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","44,283.98",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","9,919,611",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 1035611 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","10.26"
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Block Size","","256",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Grid Size","","3,969",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","32",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","102.40",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","Kbyte/block","8.19",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1,016,064",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","8.86",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","8",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","11",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","8",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","91.38",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","58.48",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","135,204.17",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","4,380,672",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","132,407.36",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","7,829,136",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","125,572.10",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","6,494,736",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","132,407.36",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","7,829,136",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","128,688.33",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","31,316,544",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.04",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","393,262",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","87.76",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","130.86",
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 5332531 excessive sectors (56% of the total 9457369 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","52.33"
"5","237303","SpMV","127.0.0.1","237303  ""<default domain>:Cusparse SortR degme.mtx 1 1 2:none:none:none:none:none:none"" ","","void cusparse::coomv_kernel<(unsigned int)256, (unsigned int)8, (bool)0, int, float, float, float, float>(cusparse::KernelCoeffs<T8>, T4, const T4 *, const T4 *, const T5 *, const T6 *, T7 *, T4 *, T8 *)","1","7","(256, 1, 1)","(3969, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedSharedAccess","OPT","This kernel has uncoalesced shared accesses resulting in a total of 254016 excessive wavefronts (33% of the total 762048 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations. The CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c-ab) has an example on optimizing shared memory accesses.","global","31.57"
