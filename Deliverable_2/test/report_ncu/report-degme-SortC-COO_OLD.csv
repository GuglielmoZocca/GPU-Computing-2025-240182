"ID","Process ID","Process Name","Host Name","thread Domain:Push/Pop_Range:PL_Type:PL_Value:CLR_Type:Color:Msg_Type:Msg","Id:Domain:Start/Stop_Range:PL_Type:PL_Value:CLR_Type:Color:Msg_Type:Msg","Kernel Name","Context","Stream","Block Size","Grid Size","Device","CC","Section Name","Metric Name","Metric Unit","Metric Value","Rule Name","Rule Type","Rule Description","Estimated Speedup Type","Estimated Speedup"
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,064,591",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","7.80",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","5.01",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.22",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","6.44",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","12.44",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,054,399.93",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.75",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","1.05",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.11",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.11",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.76",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.11",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.76",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.79"
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","46.78",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","7.63",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","7.80",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","0.43",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","65.60",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.64",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 98.9% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.8088"
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.75",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.25",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.82",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.04",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 36.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.82 active warps per scheduler, but only an average of 0.04 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","92.2"
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","284.71",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","284.78",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.56",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","28.06",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 225.9 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 79.3% of the total average of 284.7 cycles between issuing two instructions.","global","79.33"
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","56,693.30",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,699,300",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","56,707.72",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,702,529",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 253986 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.6071"
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Block Size","","32",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Grid Size","","253,986",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","256",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,127,552",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","141.73",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","128",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","51",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","64",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.18",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.48",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","","","","TheoreticalOccupancy","OPT","The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that can fit on the SM.","global","50"
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","135,217.83",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","64,734,720",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,054,399.93",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","115,616,606",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,960,254.58",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","95,903,712",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,054,399.93",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","115,616,606",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,064,881.72",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","462,466,424",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.20",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,539,860",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","33.33",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","2,267.73",
"0","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 2714035 excessive sectors (38% of the total 7111703 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","37.44"
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,062,032",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","7.81",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","5.02",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.22",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","6.45",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","12.43",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,051,323.25",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.75",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","1.05",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.11",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.11",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.76",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.11",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.76",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.78"
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","46.82",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","7.64",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","7.81",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","0.43",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","65.50",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.64",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 98.9% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.8086"
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.74",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.26",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.82",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.04",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 36.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.82 active warps per scheduler, but only an average of 0.04 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","92.19"
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","284.97",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","285.04",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.56",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","28.06",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 227.7 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 79.9% of the total average of 285.0 cycles between issuing two instructions.","global","79.9"
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","56,693.30",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,699,300",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","56,707.76",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,702,539",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 253986 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.608"
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Block Size","","32",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Grid Size","","253,986",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","256",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,127,552",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","141.73",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","128",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","51",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","64",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.30",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.55",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","","","","TheoreticalOccupancy","OPT","The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that can fit on the SM.","global","50"
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","135,162.67",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","64,654,336",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,051,323.25",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","115,473,596",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,959,560.15",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","95,784,864",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,051,323.25",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","115,473,596",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,066,000.57",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","461,894,384",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.20",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,539,860",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","33.33",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","2,267.73",
"1","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 2714035 excessive sectors (38% of the total 7111703 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","37.48"
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.97",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,064,043",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","7.80",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","5.02",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.22",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","6.44",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","12.42",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,053,376.18",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.75",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","1.05",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.11",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.11",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.76",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.11",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.76",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.79"
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","46.80",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","7.63",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","7.80",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","0.43",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","65.52",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.64",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 99.0% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.808"
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.74",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.26",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.82",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.04",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 36.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.82 active warps per scheduler, but only an average of 0.04 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","92.2"
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","284.96",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","285.03",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.56",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","28.06",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 226.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 79.5% of the total average of 285.0 cycles between issuing two instructions.","global","79.46"
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","56,693.30",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,699,300",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","56,708.90",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,702,794",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 253986 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.6074"
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Block Size","","32",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Grid Size","","253,986",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","256",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,127,552",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","141.73",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","128",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","51",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","64",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.25",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.52",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Occupancy","","","","TheoreticalOccupancy","OPT","The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that can fit on the SM.","global","50"
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","135,243.33",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","64,716,288",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,053,376.18",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","115,585,834",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,960,905.46",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","95,878,080",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,053,376.18",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","115,585,834",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,066,440.79",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","462,343,336",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.20",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,539,860",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","33.33",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","2,267.73",
"2","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 32 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(32, 1, 1)","(253986, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 2714035 excessive sectors (38% of the total 7111703 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","37.46"
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.99",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,061,011",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","7.68",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","5.02",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.22",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","6.39",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","12.44",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,048,519.70",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.70",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.11",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.11",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.71",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.11",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.71",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.78"
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","46.81",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","7.54",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","7.68",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.00",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","65.31",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.64",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 95.1% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.7779"
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.70",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.30",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","15.11",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.05",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 37.1 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 15.11 active warps per scheduler, but only an average of 0.05 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","92.32"
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","560.25",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","560.54",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.27",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","28.68",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 323.8 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 57.8% of the total average of 560.3 cycles between issuing two instructions.","global","57.79"
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","55,559.44",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,445,314",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","55,588.31",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,451,782",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 253986 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.6089"
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Block Size","","64",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Grid Size","","126,993",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","512",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,127,552",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","70.87",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","64",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","42",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","32",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","95.08",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","60.85",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","135,081",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","64,622,080",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,048,519.70",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","115,416,042",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,941,373.60",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","95,737,392",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,048,519.70",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","115,416,042",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,060,731.75",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","461,664,168",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.18",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,285,874",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","66.67",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","1,133.87",
"3","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 2714035 excessive sectors (38% of the total 7111703 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","37.15"
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.97",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,058,148",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","7.69",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","5.02",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.21",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","6.40",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","12.48",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,045,917.50",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.70",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.11",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.11",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.72",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.11",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.72",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.78"
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","46.88",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","7.55",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","7.69",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.00",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","65.23",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.64",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 95.1% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.7803"
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.70",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.30",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","15.11",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.05",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 37.0 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 15.11 active warps per scheduler, but only an average of 0.05 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","92.31"
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","559.69",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","559.98",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.27",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","28.68",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 323.9 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 57.9% of the total average of 559.7 cycles between issuing two instructions.","global","57.87"
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","55,559.44",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,445,314",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","55,588.38",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,451,796",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 253986 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.6096"
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Block Size","","64",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Grid Size","","126,993",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","512",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,127,552",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","70.87",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","64",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","42",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","32",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","95.11",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","60.87",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","135,094.17",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","64,531,968",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,045,917.50",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","115,255,658",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,938,788.33",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","95,604,336",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,045,917.50",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","115,255,658",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,059,433.91",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","461,022,632",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.18",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,285,874",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","66.67",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","1,133.87",
"4","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 2714035 excessive sectors (38% of the total 7111703 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","37.15"
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.97",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,062,576",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","7.68",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","5.01",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.22",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","6.38",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","12.44",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,050,083.98",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.70",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","1.05",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.11",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.11",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.71",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.11",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.71",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.78"
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","46.79",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","7.54",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","7.68",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.01",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","65.22",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.64",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 95.1% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.7777"
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.70",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.30",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","15.10",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.05",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 37.1 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 15.10 active warps per scheduler, but only an average of 0.05 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","92.32"
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","559.66",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","559.95",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.27",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","28.68",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 321.8 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 57.5% of the total average of 559.7 cycles between issuing two instructions.","global","57.5"
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","55,559.44",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,445,314",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","55,588.41",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,451,803",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 253986 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.6084"
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Block Size","","64",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Grid Size","","126,993",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","512",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,127,552",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","70.87",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","64",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","42",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","32",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","94.91",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","60.74",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","135,124.67",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","64,671,744",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,050,083.98",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","115,503,822",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,943,433.60",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","95,810,208",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,050,083.98",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","115,503,822",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,059,764.71",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","462,015,288",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.18",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,285,874",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","66.67",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","1,133.87",
"5","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 64 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(64, 1, 1)","(126993, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 2714035 excessive sectors (38% of the total 7111703 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","37.16"
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.97",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,061,413",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","7.66",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","5.02",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.22",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","6.35",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","12.39",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,049,283.50",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.67",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","1.05",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.11",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.11",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.69",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.11",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.69",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.78"
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","46.83",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","7.52",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","7.66",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.34",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","65.19",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.64",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 94.3% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.7681"
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.67",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.33",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","15.11",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.05",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 37.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 15.11 active warps per scheduler, but only an average of 0.05 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","92.34"
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","566.28",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","566.85",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.63",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.01",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 321.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 56.8% of the total average of 566.3 cycles between issuing two instructions.","global","56.76"
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","54,992.56",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,318,334",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","55,048.46",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,330,855",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 253986 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.6086"
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Block Size","","128",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Grid Size","","63,497",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","1.02",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,127,616",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","70.87",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","32",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","32",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","16",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","95.14",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","60.89",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","135,174",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","64,634,880",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,049,283.50",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","115,438,750",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,937,913.25",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","95,756,112",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,049,283.50",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","115,438,750",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,062,897.10",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","461,755,000",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.18",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,158,884",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","83.33",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","566.94",
"6","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 2714035 excessive sectors (38% of the total 7111703 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","37.07"
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,062,208",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","7.66",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","5.02",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.22",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","6.35",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","12.44",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,049,137.18",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.67",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.11",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.11",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.69",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.11",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.69",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.78"
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","46.81",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","7.51",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","7.66",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.33",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","65.08",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.64",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 94.3% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.7713"
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.67",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.33",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","15.12",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.05",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 37.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 15.12 active warps per scheduler, but only an average of 0.05 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","92.34"
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","565.48",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","566.10",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.63",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.01",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 321.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 56.8% of the total average of 565.5 cycles between issuing two instructions.","global","56.83"
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","54,992.56",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,318,334",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","55,052.59",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,331,781",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 253986 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.6087"
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Block Size","","128",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Grid Size","","63,497",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","1.02",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,127,616",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","70.87",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","32",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","32",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","16",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","95.02",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","60.81",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","135,159.50",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","64,659,968",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,049,137.18",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","115,483,228",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,933,949.23",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","95,793,168",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,049,137.18",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","115,483,228",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,059,112.82",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","461,932,912",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.18",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,158,884",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","83.33",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","566.94",
"7","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 2714035 excessive sectors (38% of the total 7111703 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","36.98"
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,056,913",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","7.68",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","5.03",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.21",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","6.37",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","12.45",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,044,695.73",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.68",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","1.05",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.11",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.11",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.69",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.11",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.69",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.78"
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","46.92",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","7.53",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","7.68",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.33",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","64.97",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.65",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 94.3% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.7722"
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.67",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.33",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","15.11",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.05",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 37.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 15.11 active warps per scheduler, but only an average of 0.05 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","92.32"
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","565.53",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","566.10",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.63",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.01",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 318.3 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 56.3% of the total average of 565.5 cycles between issuing two instructions.","global","56.28"
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","54,992.56",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,318,334",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","55,048.40",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,330,841",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 253986 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.61"
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Block Size","","128",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Grid Size","","63,497",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","1.02",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,127,616",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","70.87",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","32",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","32",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","16",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","95.22",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","60.94",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","135,136.67",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","64,493,568",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,044,695.73",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","115,186,680",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,937,473.33",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","95,547,120",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,044,695.73",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","115,186,680",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,060,062.55",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","460,746,720",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.18",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,158,884",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","83.33",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","566.94",
"8","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 128 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(128, 1, 1)","(63497, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 2714035 excessive sectors (38% of the total 7111703 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","37.15"
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,055,540",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","7.63",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","5.03",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.21",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","6.32",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","12.42",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,042,474.93",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.67",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","1.05",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.11",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.11",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.68",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.11",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.68",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.78"
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","46.96",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","7.49",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","7.63",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.69",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","65.04",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.65",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 93.5% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.7635"
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.66",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.34",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.80",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.05",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 37.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 14.80 active warps per scheduler, but only an average of 0.05 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","92.37"
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","555.78",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","556.51",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.81",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.17",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 298.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 53.7% of the total average of 555.8 cycles between issuing two instructions.","global","53.73"
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","54,709.21",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,254,862",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","54,781.53",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,271,062",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 253986 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.6107"
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Block Size","","256",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Grid Size","","31,749",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","2.05",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,127,744",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","70.87",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","16",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","21",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","8",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","93.23",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","59.67",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","135,137.83",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","64,450,560",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,042,474.93",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","115,109,918",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,886,963.29",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","95,483,472",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,042,474.93",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","115,109,918",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,057,747.86",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","460,439,672",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much higher number of active cycles than the average number of active cycles. Maximum instance value is 5.66% above the average, while the minimum instance value is 4.67% below the average.","global","5.368"
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,095,392",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","91.67",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","283.47",
"9","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 2714035 excessive sectors (38% of the total 7111703 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","36.2"
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,055,005",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","7.63",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","5.03",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.21",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","6.32",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","12.49",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,042,300.68",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.67",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","1.05",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.11",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.11",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.68",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.11",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.68",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.78"
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","46.97",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","7.49",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","7.63",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.69",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","64.91",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.65",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 93.5% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.7674"
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.66",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.34",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.79",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.05",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 37.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 14.79 active warps per scheduler, but only an average of 0.05 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","92.37"
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","555.95",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","556.68",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.81",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.17",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 301.2 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 54.2% of the total average of 555.9 cycles between issuing two instructions.","global","54.18"
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","54,709.21",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,254,862",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","54,781.42",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,271,038",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 253986 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.6107"
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Block Size","","256",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Grid Size","","31,749",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","2.05",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,127,744",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","70.87",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","16",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","21",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","8",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","93.27",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","59.69",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","135,132",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","64,433,408",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,042,300.68",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","115,079,986",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,886,582.23",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","95,458,704",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,042,300.68",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","115,079,986",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,059,032.31",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","460,319,944",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much higher number of active cycles than the average number of active cycles. Maximum instance value is 5.64% above the average, while the minimum instance value is 4.87% below the average.","global","5.354"
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,095,392",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","91.67",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","283.47",
"10","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 2714035 excessive sectors (38% of the total 7111703 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","36.2"
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.97",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,054,292",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","7.64",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","5.04",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.21",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","6.32",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","12.47",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,041,584.75",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.67",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.11",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.11",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.68",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.11",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.68",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.78"
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","46.99",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","7.49",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","7.64",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.69",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","65.12",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.65",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 93.5% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.7662"
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.66",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.34",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.79",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.05",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 37.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 14.79 active warps per scheduler, but only an average of 0.05 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","92.36"
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","556.25",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","556.98",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.81",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.17",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 299.2 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 53.8% of the total average of 556.2 cycles between issuing two instructions.","global","53.78"
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","54,709.21",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,254,862",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","54,781.61",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,271,080",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 253986 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.6109"
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Block Size","","256",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Grid Size","","31,749",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","2.05",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,127,744",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","70.87",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","16",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","21",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","8",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","93.35",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","59.74",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","135,169.67",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","64,412,672",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,041,584.75",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","115,040,324",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,886,284.81",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","95,425,584",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,041,584.75",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","115,040,324",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,059,672.04",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","460,161,296",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much higher number of active cycles than the average number of active cycles. Maximum instance value is 5.76% above the average, while the minimum instance value is 4.76% below the average.","global","5.469"
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,095,392",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","91.67",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","283.47",
"11","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 256 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(256, 1, 1)","(31749, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 2714035 excessive sectors (38% of the total 7111703 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","36.21"
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.97",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,054,958",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","7.66",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","5.03",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.21",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","6.31",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","12.49",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,040,893.43",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.66",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","1.05",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.11",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.11",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.68",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.11",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.68",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.78"
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","46.98",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","7.48",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","7.66",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.88",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","64.90",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.65",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 93.0% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.7638"
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.66",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.34",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.27",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.06",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 37.7 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 14.27 active warps per scheduler, but only an average of 0.06 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","92.34"
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","537.32",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","538.10",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.91",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.25",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 251.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 46.8% of the total average of 537.3 cycles between issuing two instructions.","global","46.82"
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","54,567.69",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,223,162",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","54,647.41",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,241,020",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 253986 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.6111"
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Block Size","","512",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Grid Size","","15,875",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","4.10",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,128,000",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","70.87",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","8",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","12",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","4",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","89.99",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","57.59",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (90.0%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","10.01"
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","135,163",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","64,432,640",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,040,893.43",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","115,077,480",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,880,253.06",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","95,456,496",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,040,893.43",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","115,077,480",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,057,800.04",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","460,309,920",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much higher number of active cycles than the average number of active cycles. Additionally, other L2 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 5.99% above the average, while the minimum instance value is 5.44% below the average.","global","5.665"
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,063,652",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","95.83",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","141.74",
"12","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 2714035 excessive sectors (38% of the total 7111703 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","36.08"
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,056,973",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","7.65",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","5.03",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.21",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","6.30",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","12.44",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,043,536.41",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.66",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","1.05",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.11",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.11",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.67",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.11",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.67",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.78"
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","46.95",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","7.49",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","7.65",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.88",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","64.83",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.65",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 93.0% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.7604"
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.66",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.34",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.27",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.06",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 37.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 14.27 active warps per scheduler, but only an average of 0.06 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","92.35"
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","536.90",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","537.68",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.91",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.25",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 253.8 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 47.3% of the total average of 536.9 cycles between issuing two instructions.","global","47.28"
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","54,567.69",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,223,162",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","54,647.38",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,241,014",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 253986 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.6103"
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Block Size","","512",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Grid Size","","15,875",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","4.10",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,128,000",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","70.87",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","8",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","12",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","4",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","89.80",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","57.47",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (89.8%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","10.2"
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","135,208.67",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","64,496,512",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,043,536.41",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","115,190,040",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,880,040.50",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","95,549,904",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,043,536.41",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","115,190,040",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,056,329.82",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","460,760,160",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much higher number of active cycles than the average number of active cycles. Additionally, other L2 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 6.05% above the average, while the minimum instance value is 5.58% below the average.","global","5.715"
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,063,652",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","95.83",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","141.74",
"13","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 2714035 excessive sectors (38% of the total 7111703 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","36.04"
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.97",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,055,185",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","7.66",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","5.03",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.21",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","6.31",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","12.45",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,042,745.70",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.66",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","1.05",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.11",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.11",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.68",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.11",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.68",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.78"
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","46.96",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","7.48",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","7.66",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.88",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","64.94",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.65",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 93.0% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.7612"
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.66",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.34",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","14.28",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.06",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 37.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 14.28 active warps per scheduler, but only an average of 0.06 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","92.34"
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","536.75",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","537.54",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.91",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.25",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 252.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 47.1% of the total average of 536.8 cycles between issuing two instructions.","global","47.06"
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","54,567.69",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,223,162",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","54,647.38",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,241,014",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 253986 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.6106"
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Block Size","","512",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Grid Size","","15,875",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","65.54",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","4.10",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,128,000",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","70.87",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","8",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","12",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","4",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","89.81",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","57.48",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (89.8%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","10.19"
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","135,133.33",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","64,438,784",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,042,745.70",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","115,090,178",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,883,511.38",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","95,466,672",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,042,745.70",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","115,090,178",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,054,761.56",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","460,360,712",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much higher number of active cycles than the average number of active cycles. Additionally, other L2 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 6.02% above the average, while the minimum instance value is 5.69% below the average.","global","5.699"
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,063,652",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","95.83",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","141.74",
"14","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 512 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(512, 1, 1)","(15875, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 2714035 excessive sectors (38% of the total 7111703 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","36.14"
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.97",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,057,490",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","7.66",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","5.03",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.21",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","6.26",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","12.44",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,043,522.20",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.65",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","1.05",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.11",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.11",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.67",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.11",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.67",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.78"
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","46.91",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","7.47",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","7.66",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.97",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","65.14",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.65",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 92.8% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.7588"
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.65",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.35",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","13.18",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.08",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 37.7 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 13.18 active warps per scheduler, but only an average of 0.08 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","92.34"
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","497.01",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","497.73",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.95",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.29",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 215.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 43.3% of the total average of 497.0 cycles between issuing two instructions.","global","43.33"
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","54,497.25",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,207,384",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","54,576.36",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,225,104",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 253986 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.6104"
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Block Size","","1,024",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Grid Size","","7,938",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","32.77",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","8.19",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,128,512",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","70.88",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","4",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","3",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","83.03",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","53.14",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (83.0%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","16.97"
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","135,147.33",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","64,512,000",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,043,522.20",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","115,218,922",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,862,149.75",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","95,573,904",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,043,522.20",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","115,218,922",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,057,884.81",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","460,875,688",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much higher number of active cycles than the average number of active cycles. Additionally, other L2 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 6.77% above the average, while the minimum instance value is 6.54% below the average.","global","6.334"
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,047,794",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","97.92",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","70.88",
"15","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 0:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 2714035 excessive sectors (38% of the total 7111703 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","35.69"
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.98",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,054,544",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","7.67",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","5.04",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.21",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","6.27",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","12.47",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,040,480.80",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.66",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","1.05",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.11",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.11",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.67",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.11",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.67",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.78"
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","47.00",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","7.48",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","7.67",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.97",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","65.01",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.65",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 92.8% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.7605"
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.66",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.34",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","13.19",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.08",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 37.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 13.19 active warps per scheduler, but only an average of 0.08 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","92.33"
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","496.19",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","496.91",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.95",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.29",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 216.5 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 43.6% of the total average of 496.2 cycles between issuing two instructions.","global","43.63"
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","54,497.25",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,207,384",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","54,576.23",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,225,076",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 253986 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.6113"
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Block Size","","1,024",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Grid Size","","7,938",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","32.77",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","8.19",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,128,512",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","70.88",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","4",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","3",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","83.01",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","53.13",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (83.0%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","16.99"
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","135,189",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","64,419,328",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,040,480.80",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","115,054,072",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,869,361.06",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","95,437,152",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,040,480.80",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","115,054,072",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,053,783.22",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","460,216,288",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much higher number of active cycles than the average number of active cycles. Additionally, other L2 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 6.64% above the average, while the minimum instance value is 6.81% below the average.","global","6.239"
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,047,794",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","97.92",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","70.88",
"16","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 1:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 2714035 excessive sectors (38% of the total 7111703 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","35.88"
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.21",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/usecond","929.97",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","2,056,184",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","7.67",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","5.03",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","msecond","2.21",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","6.27",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","12.44",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","2,042,591.04",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.65",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.","",""
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","PM Sampling","Maximum Buffer Size","Mbyte","4.19",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","PM Sampling","Dropped Samples","sample","0",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","PM Sampling","Maximum Sampling Interval","cycle","20,000",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","PM Sampling","# Pass Groups","","4",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.11",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.11",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","2.67",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.11",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","2.67",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","98.78"
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","46.96",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","7.48",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","7.67",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","2.97",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","64.94",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","2.65",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","OPT","The memory access pattern for global loads from L2 might not be optimal. On average, only 29.9 of the 32 bytes transmitted per sector are utilized by each thread. This applies to the 92.8% of sectors missed in L1TEX. This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced global loads.","global","0.7587"
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","2.65",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.03",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","97.35",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","13.20",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.08",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 37.7 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 13.20 active warps per scheduler, but only an average of 0.08 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.","local","92.33"
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","497.56",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","498.28",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","31.95",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","29.29",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","OPT","On average, each warp of this kernel spends 216.2 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory. This stall type represents about 43.5% of the total average of 497.6 cycles between issuing two instructions.","global","43.45"
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason.","",""
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","54,497.25",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","12,207,384",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","54,576.31",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","12,225,094",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","OPT","This kernel executes 0 fused and 253986 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 50% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.6106"
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Block Size","","1,024",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Grid Size","","7,938",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","16",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","32.77",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","8.19",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","# SMs","SM","56",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Threads","thread","8,128,512",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Uses Green Context","","0",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","70.88",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","4",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","3",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","64",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","100",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","83.16",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","53.22",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Occupancy","","","","AchievedOccupancy","OPT","The difference between calculated theoretical (100.0%) and measured achieved occupancy (83.2%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy.","global","16.84"
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","135,189.17",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","64,471,552",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","2,042,591.04",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","115,146,122",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","1,868,140.33",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","95,513,616",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","2,042,591.04",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","115,146,122",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","2,056,991.14",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","460,584,488",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L2 Slices have a much higher number of active cycles than the average number of active cycles. Additionally, other L2 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 6.70% above the average, while the minimum instance value is 6.64% below the average.","global","6.287"
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.17",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","2,047,794",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","97.92",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","70.88",
"17","232413","SpMV","127.0.0.1","232413  ""<default domain>:COO_OLD SortC degme.mtx 1 1024 2:none:none:none:none:none:none"" ","","multiplicationCOO_OLD(int *, int *, float *, float *, float *, int)","1","7","(1024, 1, 1)","(7938, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","OPT","This kernel has uncoalesced global accesses resulting in a total of 2714035 excessive sectors (38% of the total 7111703 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional information on reducing uncoalesced device memory accesses.","global","35.83"
